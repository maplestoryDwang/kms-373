package constants;

import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Map.Entry;
import server.Randomizer;

public class EdiCubeOption {
   public static int getEdiCubePotentialId(int itemid, int grade, int num, int... args) {
      Map<Integer, Integer> list = new LinkedHashMap();
      int potentialid = 0;
      int type = itemid / 1000;
      short type;
      if (GameConstants.isWeapon(itemid)) {
         type = 1300;
      } else if (GameConstants.isCap(itemid)) {
         type = 1301;
      } else if (GameConstants.isShield(itemid) && type != 1099) {
         type = 1302;
      } else if (GameConstants.isSecondaryWeapon(itemid) && type != 1352) {
         type = 1303;
      } else if (GameConstants.isCape(itemid) || GameConstants.isLongcoat(itemid) || type == 1132 || type == 1152 || type >= 1070 && type <= 1073 || type >= 1040 && type <= 1042 || type >= 1061 && type <= 1063) {
         type = 1304;
      } else if (type != 1190 && type != 1191) {
         if (type >= 1080 && type <= 1082) {
            type = 1306;
         } else if (type != 1099 && type != 1352) {
            if (type == 1672) {
               type = 1308;
            } else {
               type = 1309;
            }
         } else {
            type = 1307;
         }
      } else {
         type = 1305;
      }

      if (grade == 1) {
         list = getRareOption(type, num);
      } else if (grade == 2) {
         list = getEpicOption(type, num);
      } else if (grade == 3) {
         list = getUniqueOption(type, num);
      } else if (grade == 4) {
         list = getLegendaryOption(type, num);
      }

      if (!((Map)list).isEmpty()) {
         while(potentialid == 0) {
            int potentialidt = getWeightedRandom((Map)list);
            if (potentialidt != 0) {
               potentialid = potentialidt;
               if (num != 3 || GameConstants.getPotentialCheck(potentialidt, args[0], args[1])) {
                  break;
               }

               potentialid = 0;
            }
         }
      } else {
         potentialid = 1;
      }

      Iterator var15 = ((Map)list).entrySet().iterator();

      while(var15.hasNext()) {
         Entry<Integer, Integer> l = (Entry)var15.next();
         if ((Integer)l.getKey() == potentialid) {
            double a = (double)(Integer)l.getValue();
            double r = a / 10000.0D;
            new DecimalFormat("#.#####");
            break;
         }
      }

      return potentialid;
   }

   public static int getUnlimitedEdiCubePotentialId(int itemid, int grade, int num, int... args) {
      new LinkedHashMap();
      int potentialid = 0;
      int type = itemid / 1000;
      short type;
      if (GameConstants.isWeapon(itemid)) {
         type = 1300;
      } else if (GameConstants.isCap(itemid)) {
         type = 1301;
      } else if (GameConstants.isShield(itemid) && type != 1099) {
         type = 1302;
      } else if (GameConstants.isSecondaryWeapon(itemid) && type != 1352) {
         type = 1303;
      } else if (!GameConstants.isCape(itemid) && !GameConstants.isLongcoat(itemid) && type != 1132 && type != 1152 && (type < 1070 || type > 1073) && (type < 1040 || type > 1042) && (type < 1061 || type > 1063)) {
         if (type != 1190 && type != 1191) {
            if (type >= 1080 && type <= 1082) {
               type = 1306;
            } else if (type != 1099 && type != 1352) {
               if (type == 1672) {
                  type = 1308;
               } else {
                  type = 1309;
               }
            } else {
               type = 1307;
            }
         } else {
            type = 1305;
         }
      } else {
         type = 1304;
      }

      if (grade != 4) {
         return 1;
      } else {
         Map<Integer, Integer> list = getUnlimitedLegendaryOption(type, num);
         if (!list.isEmpty()) {
            while(potentialid == 0) {
               int potentialidt = getWeightedRandom(list);
               if (potentialidt != 0) {
                  potentialid = potentialidt;
                  if (num != 3 || GameConstants.getPotentialCheck(potentialidt, args[0], args[1])) {
                     break;
                  }

                  potentialid = 0;
               }
            }
         } else {
            potentialid = 1;
         }

         Iterator var15 = list.entrySet().iterator();

         while(var15.hasNext()) {
            Entry<Integer, Integer> l = (Entry)var15.next();
            if ((Integer)l.getKey() == potentialid) {
               double a = (double)(Integer)l.getValue();
               double r = a / 10000.0D;
               new DecimalFormat("#.#####");
               break;
            }
         }

         return potentialid;
      }
   }

   public static Map<Integer, Integer> getRareOption(int type, int num) {
      Map<Integer, Integer> list = new HashMap();
      switch(type) {
      case 1300:
         if (num == 1) {
            list.put(12005, 58824);
            list.put(12006, 58824);
            list.put(12009, 58824);
            list.put(12010, 58824);
            list.put(12013, 58824);
            list.put(12015, 58824);
            list.put(12016, 58824);
            list.put(12017, 58824);
            list.put(12018, 58824);
            list.put(12019, 39216);
            list.put(12020, 39216);
            list.put(12045, 39216);
            list.put(12046, 39216);
            list.put(12047, 39216);
            list.put(12048, 39216);
            list.put(12049, 39216);
            list.put(12050, 39216);
            list.put(12051, 19608);
            list.put(12052, 19608);
            list.put(12055, 39216);
            list.put(12070, 19608);
            list.put(12052, 58824);
            break;
         } else if (num == 2) {
            list.put(2001, 72622);
            list.put(2002, 72622);
            list.put(2003, 72622);
            list.put(2004, 72622);
            list.put(2007, 108932);
            list.put(2008, 108932);
            list.put(2009, 108932);
            list.put(2010, 108932);
            list.put(2014, 108932);
            list.put(2015, 72622);
            list.put(2016, 72622);
            list.put(12005, 1153);
            list.put(12006, 1153);
            list.put(12009, 1153);
            list.put(12010, 1153);
            list.put(12013, 1153);
            list.put(12015, 1153);
            list.put(12016, 1153);
            list.put(12017, 1153);
            list.put(12018, 1153);
            list.put(12019, 769);
            list.put(12020, 769);
            list.put(12045, 769);
            list.put(12046, 769);
            list.put(12047, 769);
            list.put(12048, 769);
            list.put(12049, 769);
            list.put(12050, 769);
            list.put(12051, 384);
            list.put(12052, 384);
            list.put(12055, 769);
            list.put(12070, 384);
            list.put(12052, 1153);
            break;
         } else if (num == 3) {
            list.put(2001, 72622);
            list.put(2002, 72622);
            list.put(2003, 72622);
            list.put(2004, 72622);
            list.put(2007, 108932);
            list.put(2008, 108932);
            list.put(2009, 108932);
            list.put(2010, 108932);
            list.put(2014, 108932);
            list.put(2015, 72622);
            list.put(2016, 72622);
            list.put(12005, 1153);
            list.put(12006, 1153);
            list.put(12009, 1153);
            list.put(12010, 1153);
            list.put(12013, 1153);
            list.put(12015, 1153);
            list.put(12016, 1153);
            list.put(12017, 1153);
            list.put(12018, 1153);
            list.put(12019, 769);
            list.put(12020, 769);
            list.put(12045, 769);
            list.put(12046, 769);
            list.put(12047, 769);
            list.put(12048, 769);
            list.put(12049, 769);
            list.put(12050, 769);
            list.put(12051, 384);
            list.put(12052, 384);
            list.put(12055, 769);
            list.put(12070, 384);
            list.put(12052, 1153);
            break;
         }
      case 1301:
         if (num == 1) {
            list.put(12001, 63830);
            list.put(12002, 63830);
            list.put(12003, 63830);
            list.put(12004, 63830);
            list.put(12005, 63830);
            list.put(12006, 63830);
            list.put(12009, 63830);
            list.put(12010, 63830);
            list.put(12011, 42553);
            list.put(12012, 42553);
            list.put(12013, 63830);
            list.put(12041, 42553);
            list.put(12042, 42553);
            list.put(12043, 42553);
            list.put(12044, 42553);
            list.put(12045, 42553);
            list.put(12046, 42553);
            list.put(12054, 42553);
            list.put(12081, 42553);
            break;
         } else if (num == 2) {
            list.put(2001, 72622);
            list.put(2002, 72622);
            list.put(2003, 72622);
            list.put(2004, 72622);
            list.put(2007, 108932);
            list.put(2008, 108932);
            list.put(2009, 108932);
            list.put(2010, 108932);
            list.put(2015, 72622);
            list.put(2016, 72622);
            list.put(2014, 108932);
            list.put(12001, 1252);
            list.put(12002, 1252);
            list.put(12003, 1252);
            list.put(12004, 1252);
            list.put(12005, 1252);
            list.put(12006, 1252);
            list.put(12009, 1252);
            list.put(12010, 1252);
            list.put(12011, 834);
            list.put(12012, 834);
            list.put(12013, 1252);
            list.put(12041, 834);
            list.put(12042, 834);
            list.put(12043, 834);
            list.put(12044, 834);
            list.put(12045, 834);
            list.put(12046, 834);
            list.put(12054, 834);
            list.put(12081, 834);
            break;
         } else if (num == 3) {
            list.put(2001, 72622);
            list.put(2002, 72622);
            list.put(2003, 72622);
            list.put(2004, 72622);
            list.put(2007, 108932);
            list.put(2008, 108932);
            list.put(2009, 108932);
            list.put(2010, 108932);
            list.put(2015, 72622);
            list.put(2016, 72622);
            list.put(2014, 108932);
            list.put(12001, 1252);
            list.put(12002, 1252);
            list.put(12003, 1252);
            list.put(12004, 1252);
            list.put(12005, 1252);
            list.put(12006, 1252);
            list.put(12009, 1252);
            list.put(12010, 1252);
            list.put(12011, 834);
            list.put(12012, 834);
            list.put(12013, 1252);
            list.put(12041, 834);
            list.put(12042, 834);
            list.put(12043, 834);
            list.put(12044, 834);
            list.put(12045, 834);
            list.put(12046, 834);
            list.put(12054, 834);
            list.put(12081, 834);
            break;
         }
      case 1302:
         if (num == 1) {
            list.put(12005, 58824);
            list.put(12006, 58824);
            list.put(12009, 58824);
            list.put(12010, 58824);
            list.put(12013, 58824);
            list.put(12015, 58824);
            list.put(12016, 58824);
            list.put(12017, 58824);
            list.put(12018, 58824);
            list.put(12019, 39216);
            list.put(12020, 39216);
            list.put(12045, 39216);
            list.put(12046, 39216);
            list.put(12047, 39216);
            list.put(12048, 39216);
            list.put(12049, 39216);
            list.put(12050, 39216);
            list.put(12051, 19608);
            list.put(12052, 19608);
            list.put(12055, 39216);
            list.put(12070, 19608);
            list.put(12052, 58824);
         } else if (num == 2) {
            list.put(2001, 72622);
            list.put(2002, 72622);
            list.put(2003, 72622);
            list.put(2004, 72622);
            list.put(2007, 108932);
            list.put(2008, 108932);
            list.put(2009, 108932);
            list.put(2010, 108932);
            list.put(2014, 108932);
            list.put(2015, 72622);
            list.put(2016, 72622);
            list.put(12005, 1153);
            list.put(12006, 1153);
            list.put(12009, 1153);
            list.put(12010, 1153);
            list.put(12013, 1153);
            list.put(12015, 1153);
            list.put(12016, 1153);
            list.put(12017, 1153);
            list.put(12018, 1153);
            list.put(12019, 769);
            list.put(12020, 769);
            list.put(12045, 769);
            list.put(12046, 769);
            list.put(12047, 769);
            list.put(12048, 769);
            list.put(12049, 769);
            list.put(12050, 769);
            list.put(12051, 384);
            list.put(12052, 384);
            list.put(12055, 769);
            list.put(12070, 384);
            list.put(12052, 1153);
         } else if (num == 3) {
            list.put(2001, 72622);
            list.put(2002, 72622);
            list.put(2003, 72622);
            list.put(2004, 72622);
            list.put(2007, 108932);
            list.put(2008, 108932);
            list.put(2009, 108932);
            list.put(2010, 108932);
            list.put(2014, 108932);
            list.put(2015, 72622);
            list.put(2016, 72622);
            list.put(12005, 1153);
            list.put(12006, 1153);
            list.put(12009, 1153);
            list.put(12010, 1153);
            list.put(12013, 1153);
            list.put(12015, 1153);
            list.put(12016, 1153);
            list.put(12017, 1153);
            list.put(12018, 1153);
            list.put(12019, 769);
            list.put(12020, 769);
            list.put(12045, 769);
            list.put(12046, 769);
            list.put(12047, 769);
            list.put(12048, 769);
            list.put(12049, 769);
            list.put(12050, 769);
            list.put(12051, 384);
            list.put(12052, 384);
            list.put(12055, 769);
            list.put(12070, 384);
            list.put(12052, 1153);
         }
         break;
      case 1303:
         if (num == 1) {
            list.put(12005, 58824);
            list.put(12006, 58824);
            list.put(12009, 58824);
            list.put(12010, 58824);
            list.put(12013, 58824);
            list.put(12015, 58824);
            list.put(12016, 58824);
            list.put(12017, 58824);
            list.put(12018, 58824);
            list.put(12019, 39216);
            list.put(12020, 39216);
            list.put(12045, 39216);
            list.put(12046, 39216);
            list.put(12047, 39216);
            list.put(12048, 39216);
            list.put(12049, 39216);
            list.put(12050, 39216);
            list.put(12051, 19608);
            list.put(12052, 19608);
            list.put(12055, 39216);
            list.put(12070, 19608);
            list.put(12052, 58824);
         } else if (num == 2) {
            list.put(2001, 72622);
            list.put(2002, 72622);
            list.put(2003, 72622);
            list.put(2004, 72622);
            list.put(2007, 108932);
            list.put(2008, 108932);
            list.put(2009, 108932);
            list.put(2010, 108932);
            list.put(2014, 108932);
            list.put(2015, 72622);
            list.put(2016, 72622);
            list.put(12005, 1153);
            list.put(12006, 1153);
            list.put(12009, 1153);
            list.put(12010, 1153);
            list.put(12013, 1153);
            list.put(12015, 1153);
            list.put(12016, 1153);
            list.put(12017, 1153);
            list.put(12018, 1153);
            list.put(12019, 769);
            list.put(12020, 769);
            list.put(12045, 769);
            list.put(12046, 769);
            list.put(12047, 769);
            list.put(12048, 769);
            list.put(12049, 769);
            list.put(12050, 769);
            list.put(12051, 384);
            list.put(12052, 384);
            list.put(12055, 769);
            list.put(12070, 384);
            list.put(12052, 1153);
         } else if (num == 3) {
            list.put(2001, 72622);
            list.put(2002, 72622);
            list.put(2003, 72622);
            list.put(2004, 72622);
            list.put(2007, 108932);
            list.put(2008, 108932);
            list.put(2009, 108932);
            list.put(2010, 108932);
            list.put(2014, 108932);
            list.put(2015, 72622);
            list.put(2016, 72622);
            list.put(12005, 1153);
            list.put(12006, 1153);
            list.put(12009, 1153);
            list.put(12010, 1153);
            list.put(12013, 1153);
            list.put(12015, 1153);
            list.put(12016, 1153);
            list.put(12017, 1153);
            list.put(12018, 1153);
            list.put(12019, 769);
            list.put(12020, 769);
            list.put(12045, 769);
            list.put(12046, 769);
            list.put(12047, 769);
            list.put(12048, 769);
            list.put(12049, 769);
            list.put(12050, 769);
            list.put(12051, 384);
            list.put(12052, 384);
            list.put(12055, 769);
            list.put(12070, 384);
            list.put(12052, 1153);
         }
         break;
      case 1304:
         if (num == 1) {
            list.put(12001, 63830);
            list.put(12002, 63830);
            list.put(12003, 63830);
            list.put(12004, 63830);
            list.put(12005, 63830);
            list.put(12006, 63830);
            list.put(12009, 63830);
            list.put(12010, 63830);
            list.put(12011, 42553);
            list.put(12012, 42553);
            list.put(12013, 63830);
            list.put(12041, 42553);
            list.put(12042, 42553);
            list.put(12043, 42553);
            list.put(12044, 42553);
            list.put(12045, 42553);
            list.put(12046, 42553);
            list.put(12054, 42553);
            list.put(12081, 42553);
         } else if (num == 2) {
            list.put(2001, 72622);
            list.put(2002, 72622);
            list.put(2003, 72622);
            list.put(2004, 72622);
            list.put(2007, 108932);
            list.put(2008, 108932);
            list.put(2009, 108932);
            list.put(2010, 108932);
            list.put(2015, 72622);
            list.put(2016, 72622);
            list.put(2014, 108932);
            list.put(12001, 1252);
            list.put(12002, 1252);
            list.put(12003, 1252);
            list.put(12004, 1252);
            list.put(12005, 1252);
            list.put(12006, 1252);
            list.put(12009, 1252);
            list.put(12010, 1252);
            list.put(12011, 834);
            list.put(12012, 834);
            list.put(12013, 1252);
            list.put(12041, 834);
            list.put(12042, 834);
            list.put(12043, 834);
            list.put(12044, 834);
            list.put(12045, 834);
            list.put(12046, 834);
            list.put(12054, 834);
            list.put(12081, 834);
         } else if (num == 3) {
            list.put(2001, 72622);
            list.put(2002, 72622);
            list.put(2003, 72622);
            list.put(2004, 72622);
            list.put(2007, 108932);
            list.put(2008, 108932);
            list.put(2009, 108932);
            list.put(2010, 108932);
            list.put(2011, 72622);
            list.put(2012, 72622);
            list.put(2014, 108932);
            list.put(12001, 1252);
            list.put(12002, 1252);
            list.put(12003, 1252);
            list.put(12004, 1252);
            list.put(12005, 1252);
            list.put(12006, 1252);
            list.put(12009, 1252);
            list.put(12010, 1252);
            list.put(12011, 834);
            list.put(12012, 834);
            list.put(12013, 1252);
            list.put(12041, 834);
            list.put(12042, 834);
            list.put(12043, 834);
            list.put(12044, 834);
            list.put(12045, 834);
            list.put(12046, 834);
            list.put(12054, 834);
            list.put(12081, 834);
         }
         break;
      case 1305:
         if (num == 1) {
            list.put(12005, 58824);
            list.put(12006, 58824);
            list.put(12009, 58824);
            list.put(12010, 58824);
            list.put(12013, 58824);
            list.put(12015, 58824);
            list.put(12016, 58824);
            list.put(12017, 58824);
            list.put(12018, 58824);
            list.put(12019, 39216);
            list.put(12020, 39216);
            list.put(12045, 39216);
            list.put(12046, 39216);
            list.put(12047, 39216);
            list.put(12048, 39216);
            list.put(12049, 39216);
            list.put(12050, 39216);
            list.put(12051, 19608);
            list.put(12052, 19608);
            list.put(12055, 39216);
            list.put(12070, 19608);
            list.put(12052, 58824);
         } else if (num == 2) {
            list.put(2001, 72622);
            list.put(2002, 72622);
            list.put(2003, 72622);
            list.put(2004, 72622);
            list.put(2007, 108932);
            list.put(2008, 108932);
            list.put(2009, 108932);
            list.put(2010, 108932);
            list.put(2014, 108932);
            list.put(2015, 72622);
            list.put(2016, 72622);
            list.put(12005, 1153);
            list.put(12006, 1153);
            list.put(12009, 1153);
            list.put(12010, 1153);
            list.put(12013, 1153);
            list.put(12015, 1153);
            list.put(12016, 1153);
            list.put(12017, 1153);
            list.put(12018, 1153);
            list.put(12019, 769);
            list.put(12020, 769);
            list.put(12045, 769);
            list.put(12046, 769);
            list.put(12047, 769);
            list.put(12048, 769);
            list.put(12049, 769);
            list.put(12050, 769);
            list.put(12051, 384);
            list.put(12052, 384);
            list.put(12055, 769);
            list.put(12070, 384);
            list.put(12052, 1153);
         } else if (num == 3) {
            list.put(2001, 72622);
            list.put(2002, 72622);
            list.put(2003, 72622);
            list.put(2004, 72622);
            list.put(2007, 108932);
            list.put(2008, 108932);
            list.put(2009, 108932);
            list.put(2010, 108932);
            list.put(2014, 108932);
            list.put(2015, 72622);
            list.put(2016, 72622);
            list.put(12005, 1153);
            list.put(12006, 1153);
            list.put(12009, 1153);
            list.put(12010, 1153);
            list.put(12013, 1153);
            list.put(12015, 1153);
            list.put(12016, 1153);
            list.put(12017, 1153);
            list.put(12018, 1153);
            list.put(12019, 769);
            list.put(12020, 769);
            list.put(12045, 769);
            list.put(12046, 769);
            list.put(12047, 769);
            list.put(12048, 769);
            list.put(12049, 769);
            list.put(12050, 769);
            list.put(12051, 384);
            list.put(12052, 384);
            list.put(12055, 769);
            list.put(12070, 384);
            list.put(12052, 1153);
         }
         break;
      case 1306:
         if (num == 1) {
            list.put(12001, 63830);
            list.put(12002, 63830);
            list.put(12003, 63830);
            list.put(12004, 63830);
            list.put(12005, 63830);
            list.put(12006, 63830);
            list.put(12009, 63830);
            list.put(12010, 63830);
            list.put(12011, 42553);
            list.put(12012, 42553);
            list.put(12013, 63830);
            list.put(12041, 42553);
            list.put(12042, 42553);
            list.put(12043, 42553);
            list.put(12044, 42553);
            list.put(12045, 42553);
            list.put(12046, 42553);
            list.put(12054, 42553);
            list.put(12081, 42553);
         } else if (num == 2) {
            list.put(2001, 72622);
            list.put(2002, 72622);
            list.put(2003, 72622);
            list.put(2004, 72622);
            list.put(2007, 108932);
            list.put(2008, 108932);
            list.put(2009, 108932);
            list.put(2010, 108932);
            list.put(2011, 72622);
            list.put(2012, 72622);
            list.put(2014, 108932);
            list.put(12001, 1252);
            list.put(12002, 1252);
            list.put(12003, 1252);
            list.put(12004, 1252);
            list.put(12005, 1252);
            list.put(12006, 1252);
            list.put(12009, 1252);
            list.put(12010, 1252);
            list.put(12011, 834);
            list.put(12012, 834);
            list.put(12013, 1252);
            list.put(12041, 834);
            list.put(12042, 834);
            list.put(12043, 834);
            list.put(12044, 834);
            list.put(12045, 834);
            list.put(12046, 834);
            list.put(12054, 834);
            list.put(12081, 834);
         } else if (num == 3) {
            list.put(2001, 72622);
            list.put(2002, 72622);
            list.put(2003, 72622);
            list.put(2004, 72622);
            list.put(2007, 108932);
            list.put(2008, 108932);
            list.put(2009, 108932);
            list.put(2010, 108932);
            list.put(2011, 72622);
            list.put(2012, 72622);
            list.put(2014, 108932);
            list.put(12001, 1252);
            list.put(12002, 1252);
            list.put(12003, 1252);
            list.put(12004, 1252);
            list.put(12005, 1252);
            list.put(12006, 1252);
            list.put(12009, 1252);
            list.put(12010, 1252);
            list.put(12011, 834);
            list.put(12012, 834);
            list.put(12013, 1252);
            list.put(12041, 834);
            list.put(12042, 834);
            list.put(12043, 834);
            list.put(12044, 834);
            list.put(12045, 834);
            list.put(12046, 834);
            list.put(12054, 834);
            list.put(12081, 834);
         }
         break;
      case 1307:
         if (num == 1) {
            list.put(12005, 58824);
            list.put(12006, 58824);
            list.put(12009, 58824);
            list.put(12010, 58824);
            list.put(12013, 58824);
            list.put(12015, 58824);
            list.put(12016, 58824);
            list.put(12017, 58824);
            list.put(12018, 58824);
            list.put(12019, 39216);
            list.put(12020, 39216);
            list.put(12045, 39216);
            list.put(12046, 39216);
            list.put(12047, 39216);
            list.put(12048, 39216);
            list.put(12049, 39216);
            list.put(12050, 39216);
            list.put(12051, 19608);
            list.put(12052, 19608);
            list.put(12055, 39216);
            list.put(12070, 19608);
            list.put(12052, 58824);
         } else if (num == 2) {
            list.put(2001, 72622);
            list.put(2002, 72622);
            list.put(2003, 72622);
            list.put(2004, 72622);
            list.put(2007, 108932);
            list.put(2008, 108932);
            list.put(2009, 108932);
            list.put(2010, 108932);
            list.put(2014, 108932);
            list.put(2015, 72622);
            list.put(2016, 72622);
            list.put(12005, 1153);
            list.put(12006, 1153);
            list.put(12009, 1153);
            list.put(12010, 1153);
            list.put(12013, 1153);
            list.put(12015, 1153);
            list.put(12016, 1153);
            list.put(12017, 1153);
            list.put(12018, 1153);
            list.put(12019, 769);
            list.put(12020, 769);
            list.put(12045, 769);
            list.put(12046, 769);
            list.put(12047, 769);
            list.put(12048, 769);
            list.put(12049, 769);
            list.put(12050, 769);
            list.put(12051, 384);
            list.put(12052, 384);
            list.put(12055, 769);
            list.put(12070, 384);
            list.put(12052, 1153);
         } else if (num == 3) {
            list.put(2001, 72622);
            list.put(2002, 72622);
            list.put(2003, 72622);
            list.put(2004, 72622);
            list.put(2007, 108932);
            list.put(2008, 108932);
            list.put(2009, 108932);
            list.put(2010, 108932);
            list.put(2014, 108932);
            list.put(2015, 72622);
            list.put(2016, 72622);
            list.put(12005, 1153);
            list.put(12006, 1153);
            list.put(12009, 1153);
            list.put(12010, 1153);
            list.put(12013, 1153);
            list.put(12015, 1153);
            list.put(12016, 1153);
            list.put(12017, 1153);
            list.put(12018, 1153);
            list.put(12019, 769);
            list.put(12020, 769);
            list.put(12045, 769);
            list.put(12046, 769);
            list.put(12047, 769);
            list.put(12048, 769);
            list.put(12049, 769);
            list.put(12050, 769);
            list.put(12051, 384);
            list.put(12052, 384);
            list.put(12055, 769);
            list.put(12070, 384);
            list.put(12052, 1153);
         }
         break;
      case 1308:
         if (num == 1) {
            list.put(12001, 63830);
            list.put(12002, 63830);
            list.put(12003, 63830);
            list.put(12004, 63830);
            list.put(12005, 63830);
            list.put(12006, 63830);
            list.put(12009, 63830);
            list.put(12010, 63830);
            list.put(12011, 42553);
            list.put(12012, 42553);
            list.put(12013, 63830);
            list.put(12041, 42553);
            list.put(12042, 42553);
            list.put(12043, 42553);
            list.put(12044, 42553);
            list.put(12045, 42553);
            list.put(12046, 42553);
            list.put(12054, 42553);
            list.put(12081, 42553);
         } else if (num == 2) {
            list.put(2001, 72622);
            list.put(2002, 72622);
            list.put(2003, 72622);
            list.put(2004, 72622);
            list.put(2007, 108932);
            list.put(2008, 108932);
            list.put(2009, 108932);
            list.put(2010, 108932);
            list.put(2011, 72622);
            list.put(2012, 72622);
            list.put(2014, 108932);
            list.put(12001, 1252);
            list.put(12002, 1252);
            list.put(12003, 1252);
            list.put(12004, 1252);
            list.put(12005, 1252);
            list.put(12006, 1252);
            list.put(12009, 1252);
            list.put(12010, 1252);
            list.put(12011, 834);
            list.put(12012, 834);
            list.put(12013, 1252);
            list.put(12041, 834);
            list.put(12042, 834);
            list.put(12043, 834);
            list.put(12044, 834);
            list.put(12045, 834);
            list.put(12046, 834);
            list.put(12054, 834);
            list.put(12081, 834);
         } else if (num == 3) {
            list.put(2001, 72622);
            list.put(2002, 72622);
            list.put(2003, 72622);
            list.put(2004, 72622);
            list.put(2007, 108932);
            list.put(2008, 108932);
            list.put(2009, 108932);
            list.put(2010, 108932);
            list.put(2011, 72622);
            list.put(2012, 72622);
            list.put(2014, 108932);
            list.put(12001, 1252);
            list.put(12002, 1252);
            list.put(12003, 1252);
            list.put(12004, 1252);
            list.put(12005, 1252);
            list.put(12006, 1252);
            list.put(12009, 1252);
            list.put(12010, 1252);
            list.put(12011, 834);
            list.put(12012, 834);
            list.put(12013, 1252);
            list.put(12041, 834);
            list.put(12042, 834);
            list.put(12043, 834);
            list.put(12044, 834);
            list.put(12045, 834);
            list.put(12046, 834);
            list.put(12054, 834);
            list.put(12081, 834);
         }
         break;
      case 1309:
         if (num == 1) {
            list.put(12001, 63830);
            list.put(12002, 63830);
            list.put(12003, 63830);
            list.put(12004, 63830);
            list.put(12005, 63830);
            list.put(12006, 63830);
            list.put(12009, 63830);
            list.put(12010, 63830);
            list.put(12011, 42553);
            list.put(12012, 42553);
            list.put(12013, 63830);
            list.put(12041, 42553);
            list.put(12042, 42553);
            list.put(12043, 42553);
            list.put(12044, 42553);
            list.put(12045, 42553);
            list.put(12046, 42553);
            list.put(12054, 42553);
            list.put(12081, 42553);
         } else if (num == 2) {
            list.put(2001, 72622);
            list.put(2002, 72622);
            list.put(2003, 72622);
            list.put(2004, 72622);
            list.put(2007, 108932);
            list.put(2008, 108932);
            list.put(2009, 108932);
            list.put(2010, 108932);
            list.put(2011, 72622);
            list.put(2012, 72622);
            list.put(2014, 108932);
            list.put(12001, 1252);
            list.put(12002, 1252);
            list.put(12003, 1252);
            list.put(12004, 1252);
            list.put(12005, 1252);
            list.put(12006, 1252);
            list.put(12009, 1252);
            list.put(12010, 1252);
            list.put(12011, 834);
            list.put(12012, 834);
            list.put(12013, 1252);
            list.put(12041, 834);
            list.put(12042, 834);
            list.put(12043, 834);
            list.put(12044, 834);
            list.put(12045, 834);
            list.put(12046, 834);
            list.put(12054, 834);
            list.put(12081, 834);
         } else if (num == 3) {
            list.put(2001, 72622);
            list.put(2002, 72622);
            list.put(2003, 72622);
            list.put(2004, 72622);
            list.put(2007, 108932);
            list.put(2008, 108932);
            list.put(2009, 108932);
            list.put(2010, 108932);
            list.put(2011, 72622);
            list.put(2012, 72622);
            list.put(2014, 108932);
            list.put(12001, 1252);
            list.put(12002, 1252);
            list.put(12003, 1252);
            list.put(12004, 1252);
            list.put(12005, 1252);
            list.put(12006, 1252);
            list.put(12009, 1252);
            list.put(12010, 1252);
            list.put(12011, 834);
            list.put(12012, 834);
            list.put(12013, 1252);
            list.put(12041, 834);
            list.put(12042, 834);
            list.put(12043, 834);
            list.put(12044, 834);
            list.put(12045, 834);
            list.put(12046, 834);
            list.put(12054, 834);
            list.put(12081, 834);
         }
      }

      return list;
   }

   public static Map<Integer, Integer> getEpicOption(int type, int num) {
      Map<Integer, Integer> list = new HashMap();
      switch(type) {
      case 1300:
         if (num == 1) {
            list.put(22045, 88235);
            list.put(22046, 88235);
            list.put(22051, 58824);
            list.put(22052, 58824);
            list.put(22055, 29412);
            list.put(22057, 88235);
            list.put(22058, 88235);
            list.put(22059, 88235);
            list.put(22060, 88235);
            list.put(22070, 29412);
            list.put(22087, 58824);
            list.put(22201, 88235);
            list.put(22206, 88235);
            list.put(22291, 58824);
         } else if (num == 2) {
            list.put(12005, 56022);
            list.put(12006, 56022);
            list.put(12009, 56022);
            list.put(12010, 56022);
            list.put(12013, 56022);
            list.put(12015, 56022);
            list.put(12016, 56022);
            list.put(12017, 56022);
            list.put(12018, 56022);
            list.put(12019, 37348);
            list.put(12020, 37348);
            list.put(12045, 37348);
            list.put(12046, 37348);
            list.put(12047, 37348);
            list.put(12048, 37348);
            list.put(12049, 37348);
            list.put(12050, 37348);
            list.put(12051, 18674);
            list.put(12052, 18674);
            list.put(12055, 37348);
            list.put(12070, 18674);
            list.put(12052, 56022);
            list.put(22045, 4202);
            list.put(22046, 4202);
            list.put(22051, 2801);
            list.put(22052, 2801);
            list.put(22055, 1401);
            list.put(22057, 4202);
            list.put(22058, 4202);
            list.put(22059, 4202);
            list.put(22060, 4202);
            list.put(22070, 1401);
            list.put(22087, 2801);
            list.put(22201, 4202);
            list.put(22206, 4202);
            list.put(22291, 2801);
         } else if (num == 3) {
            list.put(12005, 56022);
            list.put(12006, 56022);
            list.put(12009, 56022);
            list.put(12010, 56022);
            list.put(12013, 56022);
            list.put(12015, 56022);
            list.put(12016, 56022);
            list.put(12017, 56022);
            list.put(12018, 56022);
            list.put(12019, 37348);
            list.put(12020, 37348);
            list.put(12045, 37348);
            list.put(12046, 37348);
            list.put(12047, 37348);
            list.put(12048, 37348);
            list.put(12049, 37348);
            list.put(12050, 37348);
            list.put(12051, 18674);
            list.put(12052, 18674);
            list.put(12055, 37348);
            list.put(12070, 18674);
            list.put(12052, 56022);
            list.put(22045, 4202);
            list.put(22046, 4202);
            list.put(22051, 2801);
            list.put(22052, 2801);
            list.put(22055, 1401);
            list.put(22057, 4202);
            list.put(22058, 4202);
            list.put(22059, 4202);
            list.put(22060, 4202);
            list.put(22070, 1401);
            list.put(22087, 2801);
            list.put(22201, 4202);
            list.put(22206, 4202);
            list.put(22291, 2801);
         }
         break;
      case 1301:
         if (num == 1) {
            list.put(22001, 60000);
            list.put(22002, 60000);
            list.put(22003, 60000);
            list.put(22004, 60000);
            list.put(22005, 60000);
            list.put(22006, 60000);
            list.put(22009, 60000);
            list.put(22010, 60000);
            list.put(22011, 40000);
            list.put(22012, 40000);
            list.put(22013, 60000);
            list.put(22041, 40000);
            list.put(22042, 40000);
            list.put(22043, 40000);
            list.put(22044, 40000);
            list.put(22045, 60000);
            list.put(22046, 60000);
            list.put(22054, 60000);
            list.put(22086, 40000);
         } else if (num == 2) {
            list.put(12001, 60790);
            list.put(12002, 60790);
            list.put(12003, 60790);
            list.put(12004, 60790);
            list.put(12005, 60790);
            list.put(12006, 60790);
            list.put(12009, 60790);
            list.put(12010, 60790);
            list.put(12011, 40527);
            list.put(12012, 40527);
            list.put(12013, 60790);
            list.put(12041, 40527);
            list.put(12042, 40527);
            list.put(12043, 40527);
            list.put(12044, 40527);
            list.put(12045, 40527);
            list.put(12046, 40527);
            list.put(12054, 40527);
            list.put(12081, 40527);
            list.put(22001, 2857);
            list.put(22002, 2857);
            list.put(22003, 2857);
            list.put(22004, 2857);
            list.put(22005, 2857);
            list.put(22006, 2857);
            list.put(22009, 2857);
            list.put(22010, 2857);
            list.put(22011, 1905);
            list.put(22012, 1905);
            list.put(22013, 2857);
            list.put(22041, 1905);
            list.put(22042, 1905);
            list.put(22043, 1905);
            list.put(22044, 1905);
            list.put(22045, 2857);
            list.put(22046, 2857);
            list.put(22054, 2857);
            list.put(22086, 1905);
         } else if (num == 3) {
            list.put(12001, 60790);
            list.put(12002, 60790);
            list.put(12003, 60790);
            list.put(12004, 60790);
            list.put(12005, 60790);
            list.put(12006, 60790);
            list.put(12009, 60790);
            list.put(12010, 60790);
            list.put(12011, 40527);
            list.put(12012, 40527);
            list.put(12013, 60790);
            list.put(12041, 40527);
            list.put(12042, 40527);
            list.put(12043, 40527);
            list.put(12044, 40527);
            list.put(12045, 40527);
            list.put(12046, 40527);
            list.put(12054, 40527);
            list.put(12081, 40527);
            list.put(22001, 2857);
            list.put(22002, 2857);
            list.put(22003, 2857);
            list.put(22004, 2857);
            list.put(22005, 2857);
            list.put(22006, 2857);
            list.put(22009, 2857);
            list.put(22010, 2857);
            list.put(22011, 1905);
            list.put(22012, 1905);
            list.put(22013, 2857);
            list.put(22041, 1905);
            list.put(22042, 1905);
            list.put(22043, 1905);
            list.put(22044, 1905);
            list.put(22045, 2857);
            list.put(22046, 2857);
            list.put(22054, 2857);
            list.put(22086, 1905);
         }
         break;
      case 1302:
         if (num == 1) {
            list.put(22045, 88235);
            list.put(22046, 88235);
            list.put(22051, 58824);
            list.put(22052, 58824);
            list.put(22055, 29412);
            list.put(22057, 88235);
            list.put(22058, 88235);
            list.put(22059, 88235);
            list.put(22060, 88235);
            list.put(22070, 29412);
            list.put(22087, 58824);
            list.put(22201, 88235);
            list.put(22206, 88235);
            list.put(22291, 58824);
         } else if (num == 2) {
            list.put(12005, 56022);
            list.put(12006, 56022);
            list.put(12009, 56022);
            list.put(12010, 56022);
            list.put(12013, 56022);
            list.put(12015, 56022);
            list.put(12016, 56022);
            list.put(12017, 56022);
            list.put(12018, 56022);
            list.put(12019, 37348);
            list.put(12020, 37348);
            list.put(12045, 37348);
            list.put(12046, 37348);
            list.put(12047, 37348);
            list.put(12048, 37348);
            list.put(12049, 37348);
            list.put(12050, 37348);
            list.put(12051, 18674);
            list.put(12052, 18674);
            list.put(12055, 37348);
            list.put(12070, 18674);
            list.put(12052, 56022);
            list.put(22045, 4202);
            list.put(22046, 4202);
            list.put(22051, 2801);
            list.put(22052, 2801);
            list.put(22055, 1401);
            list.put(22057, 4202);
            list.put(22058, 4202);
            list.put(22059, 4202);
            list.put(22060, 4202);
            list.put(22070, 1401);
            list.put(22087, 2801);
            list.put(22201, 4202);
            list.put(22206, 4202);
            list.put(22291, 2801);
         } else if (num == 3) {
            list.put(12005, 56022);
            list.put(12006, 56022);
            list.put(12009, 56022);
            list.put(12010, 56022);
            list.put(12013, 56022);
            list.put(12015, 56022);
            list.put(12016, 56022);
            list.put(12017, 56022);
            list.put(12018, 56022);
            list.put(12019, 37348);
            list.put(12020, 37348);
            list.put(12045, 37348);
            list.put(12046, 37348);
            list.put(12047, 37348);
            list.put(12048, 37348);
            list.put(12049, 37348);
            list.put(12050, 37348);
            list.put(12051, 18674);
            list.put(12052, 18674);
            list.put(12055, 37348);
            list.put(12070, 18674);
            list.put(12052, 56022);
            list.put(22045, 4202);
            list.put(22046, 4202);
            list.put(22051, 2801);
            list.put(22052, 2801);
            list.put(22055, 1401);
            list.put(22057, 4202);
            list.put(22058, 4202);
            list.put(22059, 4202);
            list.put(22060, 4202);
            list.put(22070, 1401);
            list.put(22087, 2801);
            list.put(22201, 4202);
            list.put(22206, 4202);
            list.put(22291, 2801);
         }
         break;
      case 1303:
         if (num == 1) {
            list.put(22045, 88235);
            list.put(22046, 88235);
            list.put(22051, 58824);
            list.put(22052, 58824);
            list.put(22055, 29412);
            list.put(22057, 88235);
            list.put(22058, 88235);
            list.put(22059, 88235);
            list.put(22060, 88235);
            list.put(22070, 29412);
            list.put(22087, 58824);
            list.put(22201, 88235);
            list.put(22206, 88235);
            list.put(22291, 58824);
         } else if (num == 2) {
            list.put(12005, 56022);
            list.put(12006, 56022);
            list.put(12009, 56022);
            list.put(12010, 56022);
            list.put(12013, 56022);
            list.put(12015, 56022);
            list.put(12016, 56022);
            list.put(12017, 56022);
            list.put(12018, 56022);
            list.put(12019, 37348);
            list.put(12020, 37348);
            list.put(12045, 37348);
            list.put(12046, 37348);
            list.put(12047, 37348);
            list.put(12048, 37348);
            list.put(12049, 37348);
            list.put(12050, 37348);
            list.put(12051, 18674);
            list.put(12052, 18674);
            list.put(12055, 37348);
            list.put(12070, 18674);
            list.put(12052, 56022);
            list.put(22045, 4202);
            list.put(22046, 4202);
            list.put(22051, 2801);
            list.put(22052, 2801);
            list.put(22055, 1401);
            list.put(22057, 4202);
            list.put(22058, 4202);
            list.put(22059, 4202);
            list.put(22060, 4202);
            list.put(22070, 1401);
            list.put(22087, 2801);
            list.put(22201, 4202);
            list.put(22206, 4202);
            list.put(22291, 2801);
         } else if (num == 3) {
            list.put(12005, 56022);
            list.put(12006, 56022);
            list.put(12009, 56022);
            list.put(12010, 56022);
            list.put(12013, 56022);
            list.put(12015, 56022);
            list.put(12016, 56022);
            list.put(12017, 56022);
            list.put(12018, 56022);
            list.put(12019, 37348);
            list.put(12020, 37348);
            list.put(12045, 37348);
            list.put(12046, 37348);
            list.put(12047, 37348);
            list.put(12048, 37348);
            list.put(12049, 37348);
            list.put(12050, 37348);
            list.put(12051, 18674);
            list.put(12052, 18674);
            list.put(12055, 37348);
            list.put(12070, 18674);
            list.put(12052, 56022);
            list.put(22045, 4202);
            list.put(22046, 4202);
            list.put(22051, 2801);
            list.put(22052, 2801);
            list.put(22055, 1401);
            list.put(22057, 4202);
            list.put(22058, 4202);
            list.put(22059, 4202);
            list.put(22060, 4202);
            list.put(20070, 1401);
            list.put(22087, 2801);
            list.put(22201, 4202);
            list.put(22206, 4202);
            list.put(22291, 2801);
         }
         break;
      case 1304:
         if (num == 1) {
            list.put(20001, 60000);
            list.put(20002, 60000);
            list.put(20003, 60000);
            list.put(20004, 60000);
            list.put(20005, 60000);
            list.put(20006, 60000);
            list.put(22009, 60000);
            list.put(22010, 60000);
            list.put(22011, 40000);
            list.put(22012, 40000);
            list.put(22013, 60000);
            list.put(22041, 40000);
            list.put(22042, 40000);
            list.put(22043, 40000);
            list.put(22044, 40000);
            list.put(22045, 60000);
            list.put(22046, 60000);
            list.put(22054, 60000);
            list.put(22086, 40000);
         } else if (num == 2) {
            list.put(12001, 60790);
            list.put(12002, 60790);
            list.put(12003, 60790);
            list.put(12004, 60790);
            list.put(12005, 60790);
            list.put(12006, 60790);
            list.put(12009, 60790);
            list.put(12010, 60790);
            list.put(12011, 40527);
            list.put(12012, 40527);
            list.put(12013, 60790);
            list.put(12041, 40527);
            list.put(12042, 40527);
            list.put(12043, 40527);
            list.put(12044, 40527);
            list.put(12045, 40527);
            list.put(12046, 40527);
            list.put(12054, 40527);
            list.put(12081, 40527);
            list.put(20001, 2857);
            list.put(20002, 2857);
            list.put(20003, 2857);
            list.put(20004, 2857);
            list.put(20005, 2857);
            list.put(20006, 2857);
            list.put(22009, 2857);
            list.put(22010, 2857);
            list.put(22011, 1905);
            list.put(22012, 1905);
            list.put(22013, 2857);
            list.put(22041, 1905);
            list.put(22042, 1905);
            list.put(22043, 1905);
            list.put(22044, 1905);
            list.put(22045, 2857);
            list.put(22046, 2857);
            list.put(22054, 2857);
            list.put(22086, 1905);
         } else if (num == 3) {
            list.put(12001, 60790);
            list.put(12002, 60790);
            list.put(12003, 60790);
            list.put(12004, 60790);
            list.put(12005, 60790);
            list.put(12006, 60790);
            list.put(12009, 60790);
            list.put(12010, 60790);
            list.put(12011, 40527);
            list.put(12012, 40527);
            list.put(12013, 60790);
            list.put(12041, 40527);
            list.put(12042, 40527);
            list.put(12043, 40527);
            list.put(12044, 40527);
            list.put(12045, 40527);
            list.put(12046, 40527);
            list.put(12054, 40527);
            list.put(12081, 40527);
            list.put(20001, 2857);
            list.put(20002, 2857);
            list.put(20003, 2857);
            list.put(20004, 2857);
            list.put(20005, 2857);
            list.put(20006, 2857);
            list.put(22009, 2857);
            list.put(22010, 2857);
            list.put(22011, 1905);
            list.put(22012, 1905);
            list.put(22013, 2857);
            list.put(22041, 1905);
            list.put(22042, 1905);
            list.put(22043, 1905);
            list.put(22044, 1905);
            list.put(22045, 2857);
            list.put(22046, 2857);
            list.put(22054, 2857);
            list.put(22086, 1905);
         }
         break;
      case 1305:
         if (num == 1) {
            list.put(22045, 88235);
            list.put(22046, 88235);
            list.put(22051, 58824);
            list.put(22052, 58824);
            list.put(22055, 29412);
            list.put(22057, 88235);
            list.put(22058, 88235);
            list.put(22059, 88235);
            list.put(22060, 88235);
            list.put(22070, 29412);
            list.put(22087, 58824);
            list.put(22201, 88235);
            list.put(22206, 88235);
            list.put(22291, 58824);
         } else if (num == 2) {
            list.put(12005, 56022);
            list.put(12006, 56022);
            list.put(12009, 56022);
            list.put(12010, 56022);
            list.put(12013, 56022);
            list.put(12015, 56022);
            list.put(12016, 56022);
            list.put(12017, 56022);
            list.put(12018, 56022);
            list.put(12019, 37348);
            list.put(12020, 37348);
            list.put(12045, 37348);
            list.put(12046, 37348);
            list.put(12047, 37348);
            list.put(12048, 37348);
            list.put(12049, 37348);
            list.put(12050, 37348);
            list.put(12051, 18674);
            list.put(12052, 18674);
            list.put(12055, 37348);
            list.put(12070, 18674);
            list.put(12052, 56022);
            list.put(22045, 4202);
            list.put(22046, 4202);
            list.put(22051, 2801);
            list.put(22052, 2801);
            list.put(22055, 1401);
            list.put(22057, 4202);
            list.put(22058, 4202);
            list.put(22059, 4202);
            list.put(22060, 4202);
            list.put(22070, 1401);
            list.put(22087, 2801);
            list.put(22201, 4202);
            list.put(22206, 4202);
            list.put(22291, 2801);
         } else if (num == 3) {
            list.put(12005, 56022);
            list.put(12006, 56022);
            list.put(12009, 56022);
            list.put(12010, 56022);
            list.put(12013, 56022);
            list.put(12015, 56022);
            list.put(12016, 56022);
            list.put(12017, 56022);
            list.put(12018, 56022);
            list.put(12019, 37348);
            list.put(12020, 37348);
            list.put(12045, 37348);
            list.put(12046, 37348);
            list.put(12047, 37348);
            list.put(12048, 37348);
            list.put(12049, 37348);
            list.put(12050, 37348);
            list.put(12051, 18674);
            list.put(12052, 18674);
            list.put(12055, 37348);
            list.put(12070, 18674);
            list.put(12052, 56022);
            list.put(22045, 4202);
            list.put(22046, 4202);
            list.put(22051, 2801);
            list.put(22052, 2801);
            list.put(22055, 1401);
            list.put(22057, 4202);
            list.put(22058, 4202);
            list.put(22059, 4202);
            list.put(22060, 4202);
            list.put(22070, 1401);
            list.put(22087, 2801);
            list.put(22201, 4202);
            list.put(22206, 4202);
            list.put(22291, 2801);
         }
         break;
      case 1306:
         if (num == 1) {
            list.put(20001, 60000);
            list.put(20002, 60000);
            list.put(20003, 60000);
            list.put(20004, 60000);
            list.put(20005, 60000);
            list.put(20006, 60000);
            list.put(22009, 60000);
            list.put(22010, 60000);
            list.put(22011, 40000);
            list.put(22012, 40000);
            list.put(22013, 60000);
            list.put(22041, 40000);
            list.put(22042, 40000);
            list.put(22043, 40000);
            list.put(22044, 40000);
            list.put(22045, 60000);
            list.put(22046, 60000);
            list.put(22054, 60000);
            list.put(22086, 40000);
         } else if (num == 2) {
            list.put(12001, 60790);
            list.put(12002, 60790);
            list.put(12003, 60790);
            list.put(12004, 60790);
            list.put(12005, 60790);
            list.put(12006, 60790);
            list.put(12009, 60790);
            list.put(12010, 60790);
            list.put(12011, 40527);
            list.put(12012, 40527);
            list.put(12013, 60790);
            list.put(12041, 40527);
            list.put(12042, 40527);
            list.put(12043, 40527);
            list.put(12044, 40527);
            list.put(12045, 40527);
            list.put(12046, 40527);
            list.put(12054, 40527);
            list.put(12081, 40527);
            list.put(20001, 2857);
            list.put(20002, 2857);
            list.put(20003, 2857);
            list.put(20004, 2857);
            list.put(20005, 2857);
            list.put(20006, 2857);
            list.put(22009, 2857);
            list.put(22010, 2857);
            list.put(22011, 1905);
            list.put(22012, 1905);
            list.put(22013, 2857);
            list.put(22041, 1905);
            list.put(22042, 1905);
            list.put(22043, 1905);
            list.put(22044, 1905);
            list.put(22045, 2857);
            list.put(22046, 2857);
            list.put(22054, 2857);
            list.put(22086, 1905);
         } else if (num == 3) {
            list.put(12001, 60790);
            list.put(12002, 60790);
            list.put(12003, 60790);
            list.put(12004, 60790);
            list.put(12005, 60790);
            list.put(12006, 60790);
            list.put(12009, 60790);
            list.put(12010, 60790);
            list.put(12011, 40527);
            list.put(12012, 40527);
            list.put(12013, 60790);
            list.put(12041, 40527);
            list.put(12042, 40527);
            list.put(12043, 40527);
            list.put(12044, 40527);
            list.put(12045, 40527);
            list.put(12046, 40527);
            list.put(12054, 40527);
            list.put(12081, 40527);
            list.put(20001, 2857);
            list.put(20002, 2857);
            list.put(20003, 2857);
            list.put(20004, 2857);
            list.put(20005, 2857);
            list.put(20006, 2857);
            list.put(22009, 2857);
            list.put(22010, 2857);
            list.put(22011, 1905);
            list.put(22012, 1905);
            list.put(22013, 2857);
            list.put(22041, 1905);
            list.put(22042, 1905);
            list.put(22043, 1905);
            list.put(22044, 1905);
            list.put(22045, 2857);
            list.put(22046, 2857);
            list.put(22054, 2857);
            list.put(22086, 1905);
         }
         break;
      case 1307:
         if (num == 1) {
            list.put(22045, 88235);
            list.put(22046, 88235);
            list.put(22051, 58824);
            list.put(22052, 58824);
            list.put(22055, 29412);
            list.put(22057, 88235);
            list.put(22058, 88235);
            list.put(22059, 88235);
            list.put(22060, 88235);
            list.put(22070, 29412);
            list.put(22087, 58824);
            list.put(22201, 88235);
            list.put(22206, 88235);
            list.put(22291, 58824);
         } else if (num == 2) {
            list.put(12005, 56022);
            list.put(12006, 56022);
            list.put(12009, 56022);
            list.put(12010, 56022);
            list.put(12013, 56022);
            list.put(12015, 56022);
            list.put(12016, 56022);
            list.put(12017, 56022);
            list.put(12018, 56022);
            list.put(12019, 37348);
            list.put(12020, 37348);
            list.put(12045, 37348);
            list.put(12046, 37348);
            list.put(12047, 37348);
            list.put(12048, 37348);
            list.put(12049, 37348);
            list.put(12050, 37348);
            list.put(12051, 18674);
            list.put(12052, 18674);
            list.put(12055, 37348);
            list.put(12070, 18674);
            list.put(12052, 56022);
            list.put(22045, 4202);
            list.put(22046, 4202);
            list.put(22051, 2801);
            list.put(22052, 2801);
            list.put(22055, 1401);
            list.put(22057, 4202);
            list.put(22058, 4202);
            list.put(22059, 4202);
            list.put(22060, 4202);
            list.put(22070, 1401);
            list.put(22087, 2801);
            list.put(22201, 4202);
            list.put(22206, 4202);
            list.put(22291, 2801);
         } else if (num == 3) {
            list.put(12005, 56022);
            list.put(12006, 56022);
            list.put(12009, 56022);
            list.put(12010, 56022);
            list.put(12013, 56022);
            list.put(12015, 56022);
            list.put(12016, 56022);
            list.put(12017, 56022);
            list.put(12018, 56022);
            list.put(12019, 37348);
            list.put(12020, 37348);
            list.put(12045, 37348);
            list.put(12046, 37348);
            list.put(12047, 37348);
            list.put(12048, 37348);
            list.put(12049, 37348);
            list.put(12050, 37348);
            list.put(12051, 18674);
            list.put(12052, 18674);
            list.put(12055, 37348);
            list.put(12070, 18674);
            list.put(12052, 56022);
            list.put(22045, 4202);
            list.put(22046, 4202);
            list.put(22051, 2801);
            list.put(22052, 2801);
            list.put(22055, 1401);
            list.put(22057, 4202);
            list.put(22058, 4202);
            list.put(22059, 4202);
            list.put(22060, 4202);
            list.put(22070, 1401);
            list.put(22087, 2801);
            list.put(22201, 4202);
            list.put(22206, 4202);
            list.put(22291, 2801);
         }
         break;
      case 1308:
         if (num == 1) {
            list.put(20001, 60000);
            list.put(20002, 60000);
            list.put(20003, 60000);
            list.put(20004, 60000);
            list.put(20005, 60000);
            list.put(20006, 60000);
            list.put(22009, 60000);
            list.put(22010, 60000);
            list.put(22011, 40000);
            list.put(22012, 40000);
            list.put(22013, 60000);
            list.put(22041, 40000);
            list.put(22042, 40000);
            list.put(22043, 40000);
            list.put(22044, 40000);
            list.put(22045, 60000);
            list.put(22046, 60000);
            list.put(22054, 60000);
            list.put(22086, 40000);
         } else if (num == 2) {
            list.put(12001, 60790);
            list.put(12002, 60790);
            list.put(12003, 60790);
            list.put(12004, 60790);
            list.put(12005, 60790);
            list.put(12006, 60790);
            list.put(12009, 60790);
            list.put(12010, 60790);
            list.put(12011, 40527);
            list.put(12012, 40527);
            list.put(12013, 60790);
            list.put(12041, 40527);
            list.put(12042, 40527);
            list.put(12043, 40527);
            list.put(12044, 40527);
            list.put(12045, 40527);
            list.put(12046, 40527);
            list.put(12054, 40527);
            list.put(12081, 40527);
            list.put(20001, 2857);
            list.put(20002, 2857);
            list.put(20003, 2857);
            list.put(20004, 2857);
            list.put(20005, 2857);
            list.put(20006, 2857);
            list.put(22009, 2857);
            list.put(22010, 2857);
            list.put(22011, 1905);
            list.put(22012, 1905);
            list.put(22013, 2857);
            list.put(22041, 1905);
            list.put(22042, 1905);
            list.put(22043, 1905);
            list.put(22044, 1905);
            list.put(22045, 2857);
            list.put(22046, 2857);
            list.put(22054, 2857);
            list.put(22086, 1905);
         } else if (num == 3) {
            list.put(12001, 60790);
            list.put(12002, 60790);
            list.put(12003, 60790);
            list.put(12004, 60790);
            list.put(12005, 60790);
            list.put(12006, 60790);
            list.put(12009, 60790);
            list.put(12010, 60790);
            list.put(12011, 40527);
            list.put(12012, 40527);
            list.put(12013, 60790);
            list.put(12041, 40527);
            list.put(12042, 40527);
            list.put(12043, 40527);
            list.put(12044, 40527);
            list.put(12045, 40527);
            list.put(12046, 40527);
            list.put(12054, 40527);
            list.put(12081, 40527);
            list.put(20001, 2857);
            list.put(20002, 2857);
            list.put(20003, 2857);
            list.put(20004, 2857);
            list.put(20005, 2857);
            list.put(20006, 2857);
            list.put(22009, 2857);
            list.put(22010, 2857);
            list.put(22011, 1905);
            list.put(22012, 1905);
            list.put(22013, 2857);
            list.put(22041, 1905);
            list.put(22042, 1905);
            list.put(22043, 1905);
            list.put(22044, 1905);
            list.put(22045, 2857);
            list.put(22046, 2857);
            list.put(22054, 2857);
            list.put(22086, 1905);
         }
         break;
      case 1309:
         if (num == 1) {
            list.put(20001, 60000);
            list.put(20002, 60000);
            list.put(20003, 60000);
            list.put(20004, 60000);
            list.put(20005, 60000);
            list.put(20006, 60000);
            list.put(22009, 60000);
            list.put(22010, 60000);
            list.put(22011, 40000);
            list.put(22012, 40000);
            list.put(22013, 60000);
            list.put(22041, 40000);
            list.put(22042, 40000);
            list.put(22043, 40000);
            list.put(22044, 40000);
            list.put(22045, 60000);
            list.put(22046, 60000);
            list.put(22054, 60000);
            list.put(22086, 40000);
         } else if (num == 2) {
            list.put(12001, 60790);
            list.put(12002, 60790);
            list.put(12003, 60790);
            list.put(12004, 60790);
            list.put(12005, 60790);
            list.put(12006, 60790);
            list.put(12009, 60790);
            list.put(12010, 60790);
            list.put(12011, 40527);
            list.put(12012, 40527);
            list.put(12013, 60790);
            list.put(12041, 40527);
            list.put(12042, 40527);
            list.put(12043, 40527);
            list.put(12044, 40527);
            list.put(12045, 40527);
            list.put(12046, 40527);
            list.put(12054, 40527);
            list.put(12081, 40527);
            list.put(20001, 2857);
            list.put(20002, 2857);
            list.put(20003, 2857);
            list.put(20004, 2857);
            list.put(20005, 2857);
            list.put(20006, 2857);
            list.put(22009, 2857);
            list.put(22010, 2857);
            list.put(22011, 1905);
            list.put(22012, 1905);
            list.put(22013, 2857);
            list.put(22041, 1905);
            list.put(22042, 1905);
            list.put(22043, 1905);
            list.put(22044, 1905);
            list.put(22045, 2857);
            list.put(22046, 2857);
            list.put(22054, 2857);
            list.put(22086, 1905);
         } else if (num == 3) {
            list.put(12001, 60790);
            list.put(12002, 60790);
            list.put(12003, 60790);
            list.put(12004, 60790);
            list.put(12005, 60790);
            list.put(12006, 60790);
            list.put(12009, 60790);
            list.put(12010, 60790);
            list.put(12011, 40527);
            list.put(12012, 40527);
            list.put(12013, 60790);
            list.put(12041, 40527);
            list.put(12042, 40527);
            list.put(12043, 40527);
            list.put(12044, 40527);
            list.put(12045, 40527);
            list.put(12046, 40527);
            list.put(12054, 40527);
            list.put(12081, 40527);
            list.put(20001, 2857);
            list.put(20002, 2857);
            list.put(20003, 2857);
            list.put(20004, 2857);
            list.put(20005, 2857);
            list.put(20006, 2857);
            list.put(22009, 2857);
            list.put(22010, 2857);
            list.put(22011, 1905);
            list.put(22012, 1905);
            list.put(22013, 2857);
            list.put(22041, 1905);
            list.put(22042, 1905);
            list.put(22043, 1905);
            list.put(22044, 1905);
            list.put(22045, 2857);
            list.put(22046, 2857);
            list.put(22054, 2857);
            list.put(22086, 1905);
         }
      }

      return list;
   }

   public static Map<Integer, Integer> getUniqueOption(int type, int num) {
      Map<Integer, Integer> list = new HashMap();
      switch(type) {
      case 1300:
         if (num == 1) {
            list.put(32045, 69767);
            list.put(32046, 69767);
            list.put(32051, 46512);
            list.put(32053, 46512);
            list.put(32057, 46512);
            list.put(32059, 69767);
            list.put(32060, 69767);
            list.put(32061, 69767);
            list.put(32062, 69767);
            list.put(32070, 23256);
            list.put(32087, 46512);
            list.put(32091, 46512);
            list.put(32092, 46512);
            list.put(32093, 46512);
            list.put(32094, 46512);
            list.put(32201, 69767);
            list.put(32206, 69767);
            list.put(32291, 23256);
            list.put(32601, 23256);
         } else if (num == 2) {
            list.put(22045, 86505);
            list.put(22046, 86505);
            list.put(22051, 57670);
            list.put(22052, 57670);
            list.put(22055, 28835);
            list.put(22057, 86505);
            list.put(22058, 86505);
            list.put(22059, 86505);
            list.put(22060, 86505);
            list.put(22070, 28835);
            list.put(22087, 57670);
            list.put(22201, 86505);
            list.put(22206, 86505);
            list.put(22291, 57670);
            list.put(32045, 1368);
            list.put(32046, 1368);
            list.put(32051, 912);
            list.put(32053, 912);
            list.put(32057, 912);
            list.put(32059, 69767);
            list.put(32060, 69767);
            list.put(32061, 69767);
            list.put(32062, 69767);
            list.put(32070, 456);
            list.put(32087, 912);
            list.put(32091, 912);
            list.put(32092, 912);
            list.put(32093, 912);
            list.put(32094, 912);
            list.put(22401, 1368);
            list.put(22406, 1368);
            list.put(32291, 456);
            list.put(32601, 456);
         } else if (num == 3) {
            list.put(22045, 86505);
            list.put(22046, 86505);
            list.put(22051, 57670);
            list.put(22052, 57670);
            list.put(22055, 28835);
            list.put(22057, 86505);
            list.put(22058, 86505);
            list.put(22059, 86505);
            list.put(22060, 86505);
            list.put(22070, 28835);
            list.put(22087, 57670);
            list.put(22201, 86505);
            list.put(22206, 86505);
            list.put(22291, 57670);
            list.put(32045, 1368);
            list.put(32046, 1368);
            list.put(32051, 912);
            list.put(32053, 912);
            list.put(32057, 912);
            list.put(32059, 69767);
            list.put(32060, 69767);
            list.put(32061, 69767);
            list.put(32062, 69767);
            list.put(32070, 456);
            list.put(32087, 912);
            list.put(32091, 912);
            list.put(32092, 912);
            list.put(32093, 912);
            list.put(32094, 912);
            list.put(22401, 1368);
            list.put(22406, 1368);
            list.put(32291, 456);
            list.put(32601, 456);
         }
         break;
      case 1301:
         if (num == 1) {
            list.put(30001, 53571);
            list.put(30002, 53571);
            list.put(30003, 53571);
            list.put(30004, 53571);
            list.put(30005, 53571);
            list.put(30006, 53571);
            list.put(32011, 35714);
            list.put(32012, 35714);
            list.put(32014, 53571);
            list.put(32041, 35714);
            list.put(32042, 35714);
            list.put(32043, 35714);
            list.put(32044, 35714);
            list.put(32045, 53571);
            list.put(32046, 53571);
            list.put(32055, 53571);
            list.put(32086, 35714);
            list.put(32091, 35714);
            list.put(32092, 35714);
            list.put(32093, 35714);
            list.put(32094, 35714);
            list.put(32111, 17857);
            list.put(32551, 53571);
         } else if (num == 2) {
            list.put(20001, 58824);
            list.put(20002, 58824);
            list.put(20003, 58824);
            list.put(20004, 58824);
            list.put(20005, 58824);
            list.put(20006, 58824);
            list.put(22009, 58824);
            list.put(22010, 58824);
            list.put(22011, 39216);
            list.put(22012, 39216);
            list.put(22013, 58824);
            list.put(22041, 39216);
            list.put(22042, 39216);
            list.put(22043, 39216);
            list.put(22044, 39216);
            list.put(22045, 58824);
            list.put(22046, 58824);
            list.put(22054, 58824);
            list.put(22086, 39216);
            list.put(30001, 1050);
            list.put(30002, 1050);
            list.put(30003, 1050);
            list.put(30004, 1050);
            list.put(30005, 1050);
            list.put(30006, 1050);
            list.put(32011, 700);
            list.put(32012, 700);
            list.put(32014, 1050);
            list.put(32041, 700);
            list.put(32042, 700);
            list.put(32043, 700);
            list.put(32044, 700);
            list.put(32045, 1050);
            list.put(32046, 1050);
            list.put(32055, 1050);
            list.put(32086, 700);
            list.put(32091, 700);
            list.put(32092, 700);
            list.put(32093, 700);
            list.put(32094, 700);
            list.put(32111, 350);
            list.put(32551, 1050);
         } else if (num == 3) {
            list.put(20001, 58824);
            list.put(20002, 58824);
            list.put(20003, 58824);
            list.put(20004, 58824);
            list.put(20005, 58824);
            list.put(20006, 58824);
            list.put(22009, 58824);
            list.put(22010, 58824);
            list.put(22011, 39216);
            list.put(22012, 39216);
            list.put(22013, 58824);
            list.put(22041, 39216);
            list.put(22042, 39216);
            list.put(22043, 39216);
            list.put(22044, 39216);
            list.put(22045, 58824);
            list.put(22046, 58824);
            list.put(22054, 58824);
            list.put(22086, 39216);
            list.put(30001, 1050);
            list.put(30002, 1050);
            list.put(30003, 1050);
            list.put(30004, 1050);
            list.put(30005, 1050);
            list.put(30006, 1050);
            list.put(32011, 700);
            list.put(32012, 700);
            list.put(32014, 1050);
            list.put(32041, 700);
            list.put(32042, 700);
            list.put(32043, 700);
            list.put(32044, 700);
            list.put(32045, 1050);
            list.put(32046, 1050);
            list.put(32055, 1050);
            list.put(32086, 700);
            list.put(32091, 700);
            list.put(32092, 700);
            list.put(32093, 700);
            list.put(32094, 700);
            list.put(32111, 350);
            list.put(32551, 1050);
         }
         break;
      case 1302:
         if (num == 1) {
            list.put(32045, 69767);
            list.put(32046, 69767);
            list.put(32051, 46512);
            list.put(32053, 46512);
            list.put(32057, 46512);
            list.put(32059, 69767);
            list.put(32060, 69767);
            list.put(32061, 69767);
            list.put(32062, 69767);
            list.put(32070, 23256);
            list.put(32087, 46512);
            list.put(32091, 46512);
            list.put(32092, 46512);
            list.put(32093, 46512);
            list.put(32094, 46512);
            list.put(32201, 69767);
            list.put(32206, 69767);
            list.put(32291, 23256);
            list.put(32601, 23256);
         } else if (num == 2) {
            list.put(22045, 86505);
            list.put(22046, 86505);
            list.put(22051, 57670);
            list.put(22052, 57670);
            list.put(22055, 28835);
            list.put(22057, 86505);
            list.put(22058, 86505);
            list.put(22059, 86505);
            list.put(22060, 86505);
            list.put(22070, 28835);
            list.put(22087, 57670);
            list.put(22201, 86505);
            list.put(22206, 86505);
            list.put(22291, 57670);
            list.put(32045, 1368);
            list.put(32046, 1368);
            list.put(32051, 912);
            list.put(32053, 912);
            list.put(32057, 912);
            list.put(32059, 69767);
            list.put(32060, 69767);
            list.put(32061, 69767);
            list.put(32062, 69767);
            list.put(32070, 456);
            list.put(32087, 912);
            list.put(32091, 912);
            list.put(32092, 912);
            list.put(32093, 912);
            list.put(32094, 912);
            list.put(32201, 1368);
            list.put(32206, 1368);
            list.put(32291, 456);
            list.put(32601, 456);
         } else if (num == 3) {
            list.put(22045, 86505);
            list.put(22046, 86505);
            list.put(22051, 57670);
            list.put(22052, 57670);
            list.put(22055, 28835);
            list.put(22057, 86505);
            list.put(22058, 86505);
            list.put(22059, 86505);
            list.put(22060, 86505);
            list.put(22070, 28835);
            list.put(22087, 57670);
            list.put(22201, 86505);
            list.put(22206, 86505);
            list.put(22291, 57670);
            list.put(32045, 1368);
            list.put(32046, 1368);
            list.put(32051, 912);
            list.put(32053, 912);
            list.put(32057, 912);
            list.put(32059, 69767);
            list.put(32060, 69767);
            list.put(32061, 69767);
            list.put(32062, 69767);
            list.put(32070, 456);
            list.put(32087, 912);
            list.put(32091, 912);
            list.put(32092, 912);
            list.put(32093, 912);
            list.put(32094, 912);
            list.put(32201, 1368);
            list.put(32206, 1368);
            list.put(32291, 456);
            list.put(32601, 456);
         }
         break;
      case 1303:
         if (num == 1) {
            list.put(32045, 69767);
            list.put(32046, 69767);
            list.put(32051, 46512);
            list.put(32053, 46512);
            list.put(32057, 46512);
            list.put(32059, 69767);
            list.put(32060, 69767);
            list.put(32061, 69767);
            list.put(32062, 69767);
            list.put(32070, 23256);
            list.put(32087, 46512);
            list.put(32091, 46512);
            list.put(32092, 46512);
            list.put(32093, 46512);
            list.put(32094, 46512);
            list.put(32201, 69767);
            list.put(32206, 69767);
            list.put(32291, 23256);
            list.put(32601, 23256);
         } else if (num == 2) {
            list.put(22045, 86505);
            list.put(22046, 86505);
            list.put(22051, 57670);
            list.put(22052, 57670);
            list.put(22055, 28835);
            list.put(22057, 86505);
            list.put(22058, 86505);
            list.put(22059, 86505);
            list.put(22060, 86505);
            list.put(22070, 28835);
            list.put(22087, 57670);
            list.put(22201, 86505);
            list.put(22206, 86505);
            list.put(22291, 57670);
            list.put(32045, 1368);
            list.put(32046, 1368);
            list.put(32051, 912);
            list.put(32053, 912);
            list.put(32057, 912);
            list.put(32059, 69767);
            list.put(32060, 69767);
            list.put(32061, 69767);
            list.put(32062, 69767);
            list.put(32070, 456);
            list.put(32087, 912);
            list.put(32091, 912);
            list.put(32092, 912);
            list.put(32093, 912);
            list.put(32094, 912);
            list.put(32201, 1368);
            list.put(32206, 1368);
            list.put(32291, 456);
            list.put(32601, 456);
         } else if (num == 3) {
            list.put(22045, 86505);
            list.put(22046, 86505);
            list.put(22051, 57670);
            list.put(22052, 57670);
            list.put(22055, 28835);
            list.put(22057, 86505);
            list.put(22058, 86505);
            list.put(22059, 86505);
            list.put(22060, 86505);
            list.put(22070, 28835);
            list.put(22087, 57670);
            list.put(22201, 86505);
            list.put(22206, 86505);
            list.put(22291, 57670);
            list.put(32045, 1368);
            list.put(32046, 1368);
            list.put(32051, 912);
            list.put(32053, 912);
            list.put(32057, 912);
            list.put(32059, 69767);
            list.put(32060, 69767);
            list.put(32061, 69767);
            list.put(32062, 69767);
            list.put(32070, 456);
            list.put(32087, 912);
            list.put(32091, 912);
            list.put(32092, 912);
            list.put(32093, 912);
            list.put(32094, 912);
            list.put(32201, 1368);
            list.put(32206, 1368);
            list.put(32291, 456);
            list.put(32601, 456);
         }
         break;
      case 1304:
         if (num == 1) {
            list.put(30001, 53571);
            list.put(30002, 53571);
            list.put(30003, 53571);
            list.put(30004, 53571);
            list.put(30005, 53571);
            list.put(30006, 53571);
            list.put(32011, 35714);
            list.put(32012, 35714);
            list.put(32014, 53571);
            list.put(32041, 35714);
            list.put(32042, 35714);
            list.put(32043, 35714);
            list.put(32044, 35714);
            list.put(32045, 53571);
            list.put(32046, 53571);
            list.put(32055, 53571);
            list.put(32086, 35714);
            list.put(32091, 35714);
            list.put(32092, 35714);
            list.put(32093, 35714);
            list.put(32094, 35714);
            list.put(32111, 17857);
            list.put(32551, 53571);
         } else if (num == 2) {
            list.put(20001, 58824);
            list.put(20002, 58824);
            list.put(20003, 58824);
            list.put(20004, 58824);
            list.put(20005, 58824);
            list.put(20006, 58824);
            list.put(22009, 58824);
            list.put(22010, 58824);
            list.put(22011, 39216);
            list.put(22012, 39216);
            list.put(22013, 58824);
            list.put(22041, 39216);
            list.put(22042, 39216);
            list.put(22043, 39216);
            list.put(22044, 39216);
            list.put(22045, 58824);
            list.put(22046, 58824);
            list.put(22054, 58824);
            list.put(22086, 39216);
            list.put(30001, 1050);
            list.put(30002, 1050);
            list.put(30003, 1050);
            list.put(30004, 1050);
            list.put(30005, 1050);
            list.put(30006, 1050);
            list.put(32011, 700);
            list.put(32012, 700);
            list.put(32014, 1050);
            list.put(32041, 700);
            list.put(32042, 700);
            list.put(32043, 700);
            list.put(32044, 700);
            list.put(32045, 1050);
            list.put(32046, 1050);
            list.put(32055, 1050);
            list.put(32086, 700);
            list.put(32091, 700);
            list.put(32092, 700);
            list.put(32093, 700);
            list.put(32094, 700);
            list.put(32111, 350);
            list.put(32551, 1050);
         } else if (num == 3) {
            list.put(20001, 58824);
            list.put(20002, 58824);
            list.put(20003, 58824);
            list.put(20004, 58824);
            list.put(20005, 58824);
            list.put(20006, 58824);
            list.put(22009, 58824);
            list.put(22010, 58824);
            list.put(22011, 39216);
            list.put(22012, 39216);
            list.put(22013, 58824);
            list.put(22041, 39216);
            list.put(22042, 39216);
            list.put(22043, 39216);
            list.put(22044, 39216);
            list.put(22045, 58824);
            list.put(22046, 58824);
            list.put(22054, 58824);
            list.put(22086, 39216);
            list.put(30001, 1050);
            list.put(30002, 1050);
            list.put(30003, 1050);
            list.put(30004, 1050);
            list.put(30005, 1050);
            list.put(30006, 1050);
            list.put(32011, 700);
            list.put(32012, 700);
            list.put(32014, 1050);
            list.put(32041, 700);
            list.put(32042, 700);
            list.put(32043, 700);
            list.put(32044, 700);
            list.put(32045, 1050);
            list.put(32046, 1050);
            list.put(32055, 1050);
            list.put(32086, 700);
            list.put(32091, 700);
            list.put(32092, 700);
            list.put(32093, 700);
            list.put(32094, 700);
            list.put(32111, 350);
            list.put(32551, 1050);
         }
         break;
      case 1305:
         if (num == 1) {
            list.put(32045, 71429);
            list.put(32046, 71429);
            list.put(32051, 47619);
            list.put(32053, 47619);
            list.put(32057, 47619);
            list.put(32059, 69767);
            list.put(32060, 69767);
            list.put(32061, 69767);
            list.put(32062, 69767);
            list.put(32070, 23810);
            list.put(32087, 47619);
            list.put(32091, 47619);
            list.put(32092, 47619);
            list.put(32093, 47619);
            list.put(32094, 47619);
            list.put(32201, 71429);
            list.put(32206, 71429);
            list.put(32291, 23810);
         } else if (num == 2) {
            list.put(22045, 86505);
            list.put(22046, 86505);
            list.put(22051, 57670);
            list.put(22052, 57670);
            list.put(22055, 28835);
            list.put(22057, 86505);
            list.put(22058, 86505);
            list.put(22059, 86505);
            list.put(22060, 86505);
            list.put(22070, 28835);
            list.put(22087, 57670);
            list.put(22201, 86505);
            list.put(22206, 86505);
            list.put(22291, 57670);
            list.put(32045, 1401);
            list.put(32046, 1401);
            list.put(32051, 934);
            list.put(32053, 934);
            list.put(32057, 934);
            list.put(32059, 69767);
            list.put(32060, 69767);
            list.put(32061, 69767);
            list.put(32062, 69767);
            list.put(32070, 467);
            list.put(32086, 934);
            list.put(32091, 934);
            list.put(32092, 934);
            list.put(32093, 934);
            list.put(32094, 934);
            list.put(32201, 1401);
            list.put(32206, 1401);
            list.put(32291, 467);
         } else if (num == 3) {
            list.put(22045, 86505);
            list.put(22046, 86505);
            list.put(22051, 57670);
            list.put(22052, 57670);
            list.put(22055, 28835);
            list.put(22057, 86505);
            list.put(22058, 86505);
            list.put(22059, 86505);
            list.put(22060, 86505);
            list.put(22070, 28835);
            list.put(22087, 57670);
            list.put(22201, 86505);
            list.put(22206, 86505);
            list.put(22291, 57670);
            list.put(32045, 1401);
            list.put(32046, 1401);
            list.put(32051, 934);
            list.put(32053, 934);
            list.put(32057, 934);
            list.put(32059, 69767);
            list.put(32060, 69767);
            list.put(32061, 69767);
            list.put(32062, 69767);
            list.put(32070, 467);
            list.put(32086, 934);
            list.put(32091, 934);
            list.put(32092, 934);
            list.put(32093, 934);
            list.put(32094, 934);
            list.put(32201, 1401);
            list.put(32206, 1401);
            list.put(32291, 467);
         }
         break;
      case 1306:
         if (num == 1) {
            list.put(30001, 53571);
            list.put(30002, 53571);
            list.put(30003, 53571);
            list.put(30004, 53571);
            list.put(30005, 53571);
            list.put(30006, 53571);
            list.put(32011, 35714);
            list.put(32012, 35714);
            list.put(32014, 53571);
            list.put(32041, 35714);
            list.put(32042, 35714);
            list.put(32043, 35714);
            list.put(32044, 35714);
            list.put(32045, 53571);
            list.put(32046, 53571);
            list.put(32055, 53571);
            list.put(32086, 35714);
            list.put(32091, 35714);
            list.put(32092, 35714);
            list.put(32093, 35714);
            list.put(32094, 35714);
            list.put(32111, 17857);
            list.put(32551, 53571);
         } else if (num == 2) {
            list.put(20001, 58824);
            list.put(20002, 58824);
            list.put(20003, 58824);
            list.put(20004, 58824);
            list.put(20005, 58824);
            list.put(20006, 58824);
            list.put(22009, 58824);
            list.put(22010, 58824);
            list.put(22011, 39216);
            list.put(22012, 39216);
            list.put(22013, 58824);
            list.put(22041, 39216);
            list.put(22042, 39216);
            list.put(22043, 39216);
            list.put(22044, 39216);
            list.put(22045, 58824);
            list.put(22046, 58824);
            list.put(22054, 58824);
            list.put(22086, 39216);
            list.put(30001, 1050);
            list.put(30002, 1050);
            list.put(30003, 1050);
            list.put(30004, 1050);
            list.put(30005, 1050);
            list.put(30006, 1050);
            list.put(32011, 700);
            list.put(32012, 700);
            list.put(32014, 1050);
            list.put(32041, 700);
            list.put(32042, 700);
            list.put(32043, 700);
            list.put(32044, 700);
            list.put(32045, 1050);
            list.put(32046, 1050);
            list.put(32055, 1050);
            list.put(32086, 700);
            list.put(32091, 700);
            list.put(32092, 700);
            list.put(32093, 700);
            list.put(32094, 700);
            list.put(32111, 350);
            list.put(32551, 1050);
         } else if (num == 3) {
            list.put(20001, 58824);
            list.put(20002, 58824);
            list.put(20003, 58824);
            list.put(20004, 58824);
            list.put(20005, 58824);
            list.put(20006, 58824);
            list.put(22009, 58824);
            list.put(22010, 58824);
            list.put(22011, 39216);
            list.put(22012, 39216);
            list.put(22013, 58824);
            list.put(22041, 39216);
            list.put(22042, 39216);
            list.put(22043, 39216);
            list.put(22044, 39216);
            list.put(22045, 58824);
            list.put(22046, 58824);
            list.put(22054, 58824);
            list.put(22086, 39216);
            list.put(30001, 1050);
            list.put(30002, 1050);
            list.put(30003, 1050);
            list.put(30004, 1050);
            list.put(30005, 1050);
            list.put(30006, 1050);
            list.put(32011, 700);
            list.put(32012, 700);
            list.put(32014, 1050);
            list.put(32041, 700);
            list.put(32042, 700);
            list.put(32043, 700);
            list.put(32044, 700);
            list.put(32045, 1050);
            list.put(32046, 1050);
            list.put(32055, 1050);
            list.put(32086, 700);
            list.put(32091, 700);
            list.put(32092, 700);
            list.put(32093, 700);
            list.put(32094, 700);
            list.put(32111, 350);
            list.put(32551, 1050);
         }
         break;
      case 1307:
         if (num == 1) {
            list.put(32045, 69767);
            list.put(32046, 69767);
            list.put(32051, 46512);
            list.put(32053, 46512);
            list.put(32057, 46512);
            list.put(32059, 69767);
            list.put(32060, 69767);
            list.put(32061, 69767);
            list.put(32062, 69767);
            list.put(32070, 23256);
            list.put(32087, 46512);
            list.put(32091, 46512);
            list.put(32092, 46512);
            list.put(32093, 46512);
            list.put(32094, 46512);
            list.put(32201, 69767);
            list.put(32206, 69767);
            list.put(32291, 23256);
            list.put(32601, 23256);
         } else if (num == 2) {
            list.put(22045, 86505);
            list.put(22046, 86505);
            list.put(22051, 57670);
            list.put(22052, 57670);
            list.put(22055, 28835);
            list.put(22057, 86505);
            list.put(22058, 86505);
            list.put(22059, 86505);
            list.put(22060, 86505);
            list.put(22070, 28835);
            list.put(22087, 57670);
            list.put(22201, 86505);
            list.put(22206, 86505);
            list.put(22291, 57670);
            list.put(32045, 1368);
            list.put(32046, 1368);
            list.put(32051, 912);
            list.put(32053, 912);
            list.put(32057, 912);
            list.put(32059, 69767);
            list.put(32060, 69767);
            list.put(32061, 69767);
            list.put(32062, 69767);
            list.put(32070, 456);
            list.put(32087, 912);
            list.put(32091, 912);
            list.put(32092, 912);
            list.put(32093, 912);
            list.put(32094, 912);
            list.put(32201, 1368);
            list.put(32206, 1368);
            list.put(32291, 456);
            list.put(32601, 456);
         } else if (num == 3) {
            list.put(22045, 86505);
            list.put(22046, 86505);
            list.put(22051, 57670);
            list.put(22052, 57670);
            list.put(22055, 28835);
            list.put(22057, 86505);
            list.put(22058, 86505);
            list.put(22059, 86505);
            list.put(22060, 86505);
            list.put(22070, 28835);
            list.put(22087, 57670);
            list.put(22201, 86505);
            list.put(22206, 86505);
            list.put(22291, 57670);
            list.put(32045, 1368);
            list.put(32046, 1368);
            list.put(32051, 912);
            list.put(32053, 912);
            list.put(32057, 912);
            list.put(32059, 69767);
            list.put(32060, 69767);
            list.put(32061, 69767);
            list.put(32062, 69767);
            list.put(32070, 456);
            list.put(32087, 912);
            list.put(32091, 912);
            list.put(32092, 912);
            list.put(32093, 912);
            list.put(32094, 912);
            list.put(32201, 1368);
            list.put(32206, 1368);
            list.put(32291, 456);
            list.put(32601, 456);
         }
         break;
      case 1308:
         if (num == 1) {
            list.put(30001, 53571);
            list.put(30002, 53571);
            list.put(30003, 53571);
            list.put(30004, 53571);
            list.put(30005, 53571);
            list.put(30006, 53571);
            list.put(32011, 35714);
            list.put(32012, 35714);
            list.put(32014, 53571);
            list.put(32041, 35714);
            list.put(32042, 35714);
            list.put(32043, 35714);
            list.put(32044, 35714);
            list.put(32045, 53571);
            list.put(32046, 53571);
            list.put(32055, 53571);
            list.put(32086, 35714);
            list.put(32091, 35714);
            list.put(32092, 35714);
            list.put(32093, 35714);
            list.put(32094, 35714);
            list.put(32111, 17857);
            list.put(32551, 53571);
         } else if (num == 2) {
            list.put(20001, 58824);
            list.put(20002, 58824);
            list.put(20003, 58824);
            list.put(20004, 58824);
            list.put(20005, 58824);
            list.put(20006, 58824);
            list.put(22009, 58824);
            list.put(22010, 58824);
            list.put(22011, 39216);
            list.put(22012, 39216);
            list.put(22013, 58824);
            list.put(22041, 39216);
            list.put(22042, 39216);
            list.put(22043, 39216);
            list.put(22044, 39216);
            list.put(22045, 58824);
            list.put(22046, 58824);
            list.put(22054, 58824);
            list.put(22086, 39216);
            list.put(30001, 1050);
            list.put(30002, 1050);
            list.put(30003, 1050);
            list.put(30004, 1050);
            list.put(30005, 1050);
            list.put(30006, 1050);
            list.put(32011, 700);
            list.put(32012, 700);
            list.put(32014, 1050);
            list.put(32041, 700);
            list.put(32042, 700);
            list.put(32043, 700);
            list.put(32044, 700);
            list.put(32045, 1050);
            list.put(32046, 1050);
            list.put(32055, 1050);
            list.put(32086, 700);
            list.put(32091, 700);
            list.put(32092, 700);
            list.put(32093, 700);
            list.put(32094, 700);
            list.put(32111, 350);
            list.put(32551, 1050);
         } else if (num == 3) {
            list.put(20001, 58824);
            list.put(20002, 58824);
            list.put(20003, 58824);
            list.put(20004, 58824);
            list.put(20005, 58824);
            list.put(20006, 58824);
            list.put(22009, 58824);
            list.put(22010, 58824);
            list.put(22011, 39216);
            list.put(22012, 39216);
            list.put(22013, 58824);
            list.put(22041, 39216);
            list.put(22042, 39216);
            list.put(22043, 39216);
            list.put(22044, 39216);
            list.put(22045, 58824);
            list.put(22046, 58824);
            list.put(22054, 58824);
            list.put(22086, 39216);
            list.put(30001, 1050);
            list.put(30002, 1050);
            list.put(30003, 1050);
            list.put(30004, 1050);
            list.put(30005, 1050);
            list.put(30006, 1050);
            list.put(32011, 700);
            list.put(32012, 700);
            list.put(32014, 1050);
            list.put(32041, 700);
            list.put(32042, 700);
            list.put(32043, 700);
            list.put(32044, 700);
            list.put(32045, 1050);
            list.put(32046, 1050);
            list.put(32055, 1050);
            list.put(32086, 700);
            list.put(32091, 700);
            list.put(32092, 700);
            list.put(32093, 700);
            list.put(32094, 700);
            list.put(32111, 350);
            list.put(32551, 1050);
         }
         break;
      case 1309:
         if (num == 1) {
            list.put(30001, 53571);
            list.put(30002, 53571);
            list.put(30003, 53571);
            list.put(30004, 53571);
            list.put(30005, 53571);
            list.put(30006, 53571);
            list.put(32011, 35714);
            list.put(32012, 35714);
            list.put(32014, 53571);
            list.put(32041, 35714);
            list.put(32042, 35714);
            list.put(32043, 35714);
            list.put(32044, 35714);
            list.put(32045, 53571);
            list.put(32046, 53571);
            list.put(32055, 53571);
            list.put(32086, 35714);
            list.put(32091, 35714);
            list.put(32092, 35714);
            list.put(32093, 35714);
            list.put(32094, 35714);
            list.put(32111, 17857);
            list.put(32551, 53571);
         } else if (num == 2) {
            list.put(20001, 58824);
            list.put(20002, 58824);
            list.put(20003, 58824);
            list.put(20004, 58824);
            list.put(20005, 58824);
            list.put(20006, 58824);
            list.put(22009, 58824);
            list.put(22010, 58824);
            list.put(22011, 39216);
            list.put(22012, 39216);
            list.put(22013, 58824);
            list.put(22041, 39216);
            list.put(22042, 39216);
            list.put(22043, 39216);
            list.put(22044, 39216);
            list.put(22045, 58824);
            list.put(22046, 58824);
            list.put(22054, 58824);
            list.put(22086, 39216);
            list.put(30001, 1050);
            list.put(30002, 1050);
            list.put(30003, 1050);
            list.put(30004, 1050);
            list.put(30005, 1050);
            list.put(30006, 1050);
            list.put(32011, 700);
            list.put(32012, 700);
            list.put(32014, 1050);
            list.put(32041, 700);
            list.put(32042, 700);
            list.put(32043, 700);
            list.put(32044, 700);
            list.put(32045, 1050);
            list.put(32046, 1050);
            list.put(32055, 1050);
            list.put(32086, 700);
            list.put(32091, 700);
            list.put(32092, 700);
            list.put(32093, 700);
            list.put(32094, 700);
            list.put(32111, 350);
            list.put(32551, 1050);
         } else if (num == 3) {
            list.put(20001, 58824);
            list.put(20002, 58824);
            list.put(20003, 58824);
            list.put(20004, 58824);
            list.put(20005, 58824);
            list.put(20006, 58824);
            list.put(22009, 58824);
            list.put(22010, 58824);
            list.put(22011, 39216);
            list.put(22012, 39216);
            list.put(22013, 58824);
            list.put(22041, 39216);
            list.put(22042, 39216);
            list.put(22043, 39216);
            list.put(22044, 39216);
            list.put(22045, 58824);
            list.put(22046, 58824);
            list.put(22054, 58824);
            list.put(22086, 39216);
            list.put(30001, 1050);
            list.put(30002, 1050);
            list.put(30003, 1050);
            list.put(30004, 1050);
            list.put(30005, 1050);
            list.put(30006, 1050);
            list.put(32011, 700);
            list.put(32012, 700);
            list.put(32014, 1050);
            list.put(32041, 700);
            list.put(32042, 700);
            list.put(32043, 700);
            list.put(32044, 700);
            list.put(32045, 1050);
            list.put(32046, 1050);
            list.put(32055, 1050);
            list.put(32086, 700);
            list.put(32091, 700);
            list.put(32092, 700);
            list.put(32093, 700);
            list.put(32094, 700);
            list.put(32111, 350);
            list.put(32551, 1050);
         }
      }

      return list;
   }

   public static Map<Integer, Integer> getLegendaryOption(int type, int num) {
      Map<Integer, Integer> list = new HashMap();
      switch(type) {
      case 1300:
         if (num == 1) {
            list.put(42045, 75000);
            list.put(42046, 75000);
            list.put(42051, 50000);
            list.put(42053, 50000);
            list.put(42057, 50000);
            list.put(42063, 75000);
            list.put(42064, 75000);
            list.put(42065, 75000);
            list.put(42066, 75000);
            list.put(42070, 25000);
            list.put(42087, 50000);
            list.put(42091, 50000);
            list.put(42092, 50000);
            list.put(42093, 50000);
            list.put(42094, 50000);
            list.put(42095, 25000);
            list.put(42096, 25000);
            list.put(42801, 25000);
            list.put(42292, 25000);
            list.put(42602, 25000);
         } else if (num == 2) {
            list.put(32045, 69420);
            list.put(32046, 69420);
            list.put(32051, 46280);
            list.put(32053, 46280);
            list.put(32057, 46280);
            list.put(32059, 69420);
            list.put(32060, 69420);
            list.put(32061, 69420);
            list.put(32062, 69420);
            list.put(32070, 23140);
            list.put(32087, 46280);
            list.put(32091, 46280);
            list.put(32092, 46280);
            list.put(32093, 46280);
            list.put(32094, 46280);
            list.put(32201, 69420);
            list.put(32206, 69420);
            list.put(32291, 23140);
            list.put(32601, 23140);
            list.put(42045, 373);
            list.put(42046, 373);
            list.put(42051, 249);
            list.put(42053, 249);
            list.put(42057, 249);
            list.put(42063, 373);
            list.put(42064, 373);
            list.put(42064, 373);
            list.put(42064, 373);
            list.put(42070, 124);
            list.put(42087, 249);
            list.put(42091, 249);
            list.put(42092, 249);
            list.put(42093, 249);
            list.put(42094, 249);
            list.put(42095, 124);
            list.put(42096, 124);
            list.put(42801, 124);
            list.put(42292, 124);
            list.put(42602, 124);
         } else if (num == 3) {
            list.put(32045, 69420);
            list.put(32046, 69420);
            list.put(32051, 46280);
            list.put(32053, 46280);
            list.put(32057, 46280);
            list.put(32059, 69420);
            list.put(32060, 69420);
            list.put(32061, 69420);
            list.put(32062, 69420);
            list.put(32070, 23140);
            list.put(32087, 46280);
            list.put(32091, 46280);
            list.put(32092, 46280);
            list.put(32093, 46280);
            list.put(32094, 46280);
            list.put(32201, 69420);
            list.put(32206, 69420);
            list.put(32291, 23140);
            list.put(32601, 23140);
            list.put(42045, 373);
            list.put(42046, 373);
            list.put(42051, 249);
            list.put(42053, 249);
            list.put(42057, 249);
            list.put(42063, 373);
            list.put(42064, 373);
            list.put(42064, 373);
            list.put(42064, 373);
            list.put(42070, 124);
            list.put(42087, 249);
            list.put(42091, 249);
            list.put(42092, 249);
            list.put(42093, 249);
            list.put(42094, 249);
            list.put(42095, 124);
            list.put(42096, 124);
            list.put(42801, 124);
            list.put(42292, 124);
            list.put(42602, 124);
         }
         break;
      case 1301:
         if (num == 1) {
            list.put(40001, 44118);
            list.put(40002, 44118);
            list.put(40003, 44118);
            list.put(40004, 44118);
            list.put(40005, 44118);
            list.put(40006, 44118);
            list.put(42011, 29412);
            list.put(42012, 29412);
            list.put(42013, 44118);
            list.put(42041, 29412);
            list.put(42042, 29412);
            list.put(42043, 29412);
            list.put(42044, 29412);
            list.put(42045, 44118);
            list.put(42046, 44118);
            list.put(42055, 44118);
            list.put(42060, 14706);
            list.put(42086, 29412);
            list.put(42091, 29412);
            list.put(42092, 29412);
            list.put(42093, 29412);
            list.put(42094, 29412);
            list.put(42094, 14706);
            list.put(42802, 14706);
            list.put(42551, 44118);
            list.put(42556, 44118);
            list.put(42650, 44118);
            list.put(42656, 44118);
         } else if (num == 2) {
            list.put(30001, 53305);
            list.put(30002, 53305);
            list.put(30003, 53305);
            list.put(30004, 53305);
            list.put(30005, 53305);
            list.put(30006, 53305);
            list.put(32011, 35537);
            list.put(32012, 35537);
            list.put(32014, 53305);
            list.put(32041, 35537);
            list.put(32042, 35537);
            list.put(32043, 35537);
            list.put(32044, 35537);
            list.put(32045, 53305);
            list.put(32046, 53305);
            list.put(32055, 35537);
            list.put(32086, 35537);
            list.put(32091, 35537);
            list.put(32092, 35537);
            list.put(32093, 35537);
            list.put(32094, 35537);
            list.put(32111, 17768);
            list.put(32551, 53305);
            list.put(40001, 219);
            list.put(40002, 219);
            list.put(40003, 219);
            list.put(40004, 219);
            list.put(40005, 219);
            list.put(40006, 219);
            list.put(42011, 146);
            list.put(42012, 146);
            list.put(42013, 219);
            list.put(42041, 146);
            list.put(42042, 146);
            list.put(42043, 146);
            list.put(42044, 146);
            list.put(42045, 219);
            list.put(42046, 219);
            list.put(42055, 219);
            list.put(42060, 73);
            list.put(42086, 146);
            list.put(42091, 146);
            list.put(42092, 146);
            list.put(42093, 146);
            list.put(42094, 146);
            list.put(42094, 73);
            list.put(42802, 73);
            list.put(42551, 219);
            list.put(42556, 219);
            list.put(42650, 219);
            list.put(42656, 219);
         } else if (num == 3) {
            list.put(30001, 53305);
            list.put(30002, 53305);
            list.put(30003, 53305);
            list.put(30004, 53305);
            list.put(30005, 53305);
            list.put(30006, 53305);
            list.put(32011, 35537);
            list.put(32012, 35537);
            list.put(32014, 53305);
            list.put(32041, 35537);
            list.put(32042, 35537);
            list.put(32043, 35537);
            list.put(32044, 35537);
            list.put(32045, 53305);
            list.put(32046, 53305);
            list.put(32055, 35537);
            list.put(32086, 35537);
            list.put(32091, 35537);
            list.put(32092, 35537);
            list.put(32093, 35537);
            list.put(32094, 35537);
            list.put(32111, 17768);
            list.put(32551, 53305);
            list.put(40001, 219);
            list.put(40002, 219);
            list.put(40003, 219);
            list.put(40004, 219);
            list.put(40005, 219);
            list.put(40006, 219);
            list.put(42011, 146);
            list.put(42012, 146);
            list.put(42013, 219);
            list.put(42041, 146);
            list.put(42042, 146);
            list.put(42043, 146);
            list.put(42044, 146);
            list.put(42045, 219);
            list.put(42046, 219);
            list.put(42055, 219);
            list.put(42060, 73);
            list.put(42086, 146);
            list.put(42091, 146);
            list.put(42092, 146);
            list.put(42093, 146);
            list.put(42094, 146);
            list.put(42094, 73);
            list.put(42802, 73);
            list.put(42551, 219);
            list.put(42556, 219);
            list.put(42650, 219);
            list.put(42656, 219);
         }
         break;
      case 1302:
         if (num == 1) {
            list.put(42045, 71429);
            list.put(42046, 71429);
            list.put(42051, 47619);
            list.put(42053, 47619);
            list.put(42057, 47619);
            list.put(42060, 23810);
            list.put(42063, 71429);
            list.put(42064, 71429);
            list.put(42065, 71429);
            list.put(42066, 71429);
            list.put(42070, 23810);
            list.put(42087, 47619);
            list.put(42091, 47619);
            list.put(42092, 47619);
            list.put(42093, 47619);
            list.put(42094, 47619);
            list.put(42095, 23810);
            list.put(42096, 23810);
            list.put(42801, 23810);
            list.put(42292, 23810);
            list.put(42602, 23810);
         } else if (num == 2) {
            list.put(32045, 69420);
            list.put(32046, 69420);
            list.put(32051, 46280);
            list.put(32053, 46280);
            list.put(32057, 46280);
            list.put(32059, 69420);
            list.put(32060, 69420);
            list.put(32061, 69420);
            list.put(32062, 69420);
            list.put(32070, 23140);
            list.put(32086, 46280);
            list.put(32091, 46280);
            list.put(32092, 46280);
            list.put(32093, 46280);
            list.put(32094, 46280);
            list.put(32201, 69420);
            list.put(32206, 69420);
            list.put(32291, 23140);
            list.put(32601, 23140);
            list.put(42045, 355);
            list.put(42046, 355);
            list.put(42051, 237);
            list.put(42053, 237);
            list.put(42057, 237);
            list.put(42060, 118);
            list.put(42063, 355);
            list.put(42064, 355);
            list.put(42065, 355);
            list.put(42066, 355);
            list.put(42070, 118);
            list.put(42087, 237);
            list.put(42091, 237);
            list.put(42092, 237);
            list.put(42093, 237);
            list.put(42094, 237);
            list.put(42095, 118);
            list.put(42096, 118);
            list.put(42801, 118);
            list.put(42292, 118);
            list.put(42602, 118);
         } else if (num == 3) {
            list.put(32045, 69420);
            list.put(32046, 69420);
            list.put(32051, 46280);
            list.put(32053, 46280);
            list.put(32057, 46280);
            list.put(32059, 69420);
            list.put(32060, 69420);
            list.put(32061, 69420);
            list.put(32062, 69420);
            list.put(32070, 23140);
            list.put(32086, 46280);
            list.put(32091, 46280);
            list.put(32092, 46280);
            list.put(32093, 46280);
            list.put(32094, 46280);
            list.put(32201, 69420);
            list.put(32206, 69420);
            list.put(32291, 23140);
            list.put(32601, 23140);
            list.put(42045, 355);
            list.put(42046, 355);
            list.put(42051, 237);
            list.put(42053, 237);
            list.put(42057, 237);
            list.put(42060, 118);
            list.put(42063, 355);
            list.put(42064, 355);
            list.put(42065, 355);
            list.put(42066, 355);
            list.put(42070, 118);
            list.put(42087, 237);
            list.put(42091, 237);
            list.put(42092, 237);
            list.put(42093, 237);
            list.put(42094, 237);
            list.put(42095, 118);
            list.put(42096, 118);
            list.put(42801, 118);
            list.put(42292, 118);
            list.put(42602, 118);
         }
         break;
      case 1303:
         if (num == 1) {
            list.put(42045, 71429);
            list.put(42046, 71429);
            list.put(42051, 47619);
            list.put(42053, 47619);
            list.put(42057, 47619);
            list.put(42060, 23810);
            list.put(42063, 71429);
            list.put(42064, 71429);
            list.put(42065, 71429);
            list.put(42066, 71429);
            list.put(42070, 23810);
            list.put(42087, 47619);
            list.put(42091, 47619);
            list.put(42092, 47619);
            list.put(42093, 47619);
            list.put(42094, 47619);
            list.put(42095, 23810);
            list.put(42096, 23810);
            list.put(42801, 23810);
            list.put(42292, 23810);
            list.put(42602, 23810);
         } else if (num == 2) {
            list.put(32045, 69420);
            list.put(32046, 69420);
            list.put(32051, 46280);
            list.put(32053, 46280);
            list.put(32057, 46280);
            list.put(32059, 69420);
            list.put(32060, 69420);
            list.put(32061, 69420);
            list.put(32062, 69420);
            list.put(32070, 23140);
            list.put(32087, 46280);
            list.put(32091, 46280);
            list.put(32092, 46280);
            list.put(32093, 46280);
            list.put(32094, 46280);
            list.put(32201, 69420);
            list.put(32206, 69420);
            list.put(32291, 23140);
            list.put(32601, 23140);
            list.put(42045, 355);
            list.put(42046, 355);
            list.put(42051, 237);
            list.put(42053, 237);
            list.put(42057, 237);
            list.put(42060, 118);
            list.put(42063, 355);
            list.put(42064, 355);
            list.put(42065, 355);
            list.put(42066, 355);
            list.put(42070, 118);
            list.put(42087, 237);
            list.put(42091, 237);
            list.put(42092, 237);
            list.put(42093, 237);
            list.put(42094, 237);
            list.put(42095, 118);
            list.put(42096, 118);
            list.put(42801, 118);
            list.put(42292, 118);
            list.put(42602, 118);
         } else if (num == 3) {
            list.put(32045, 69420);
            list.put(32046, 69420);
            list.put(32051, 46280);
            list.put(32053, 46280);
            list.put(32057, 46280);
            list.put(32059, 69420);
            list.put(32060, 69420);
            list.put(32061, 69420);
            list.put(32062, 69420);
            list.put(32070, 23140);
            list.put(32087, 46280);
            list.put(32091, 46280);
            list.put(32092, 46280);
            list.put(32093, 46280);
            list.put(32094, 46280);
            list.put(32201, 69420);
            list.put(32206, 69420);
            list.put(32291, 23140);
            list.put(32601, 23140);
            list.put(42045, 355);
            list.put(42046, 355);
            list.put(42051, 237);
            list.put(42053, 237);
            list.put(42057, 237);
            list.put(42060, 118);
            list.put(42063, 355);
            list.put(42064, 355);
            list.put(42065, 355);
            list.put(42066, 355);
            list.put(42070, 118);
            list.put(42087, 237);
            list.put(42091, 237);
            list.put(42092, 237);
            list.put(42093, 237);
            list.put(42094, 237);
            list.put(42095, 118);
            list.put(42096, 118);
            list.put(42801, 118);
            list.put(42292, 118);
            list.put(42602, 118);
         }
         break;
      case 1304:
         if (num == 1) {
            list.put(40001, 46875);
            list.put(40002, 46875);
            list.put(40003, 46875);
            list.put(40004, 46875);
            list.put(40006, 46875);
            list.put(40007, 46875);
            list.put(42011, 31250);
            list.put(42012, 31250);
            list.put(42013, 46875);
            list.put(42041, 31250);
            list.put(42042, 31250);
            list.put(42043, 31250);
            list.put(42044, 31250);
            list.put(42045, 46875);
            list.put(42046, 46875);
            list.put(42055, 46875);
            list.put(42060, 15625);
            list.put(42086, 31250);
            list.put(42091, 31250);
            list.put(42092, 31250);
            list.put(42093, 31250);
            list.put(42094, 31250);
            list.put(42802, 15625);
            list.put(42551, 46875);
            list.put(42650, 46875);
            list.put(42656, 46875);
         } else if (num == 2) {
            list.put(30001, 53305);
            list.put(30002, 53305);
            list.put(30003, 53305);
            list.put(30004, 53305);
            list.put(30005, 53305);
            list.put(30006, 53305);
            list.put(32011, 35537);
            list.put(32012, 35537);
            list.put(32014, 53305);
            list.put(32041, 35537);
            list.put(32042, 35537);
            list.put(32043, 35537);
            list.put(32044, 35537);
            list.put(32045, 53305);
            list.put(32046, 53305);
            list.put(32055, 35537);
            list.put(32086, 35537);
            list.put(32091, 35537);
            list.put(32092, 35537);
            list.put(32093, 35537);
            list.put(32094, 35537);
            list.put(32111, 17768);
            list.put(32551, 53305);
            list.put(40001, 233);
            list.put(40002, 233);
            list.put(40003, 233);
            list.put(40004, 233);
            list.put(40005, 233);
            list.put(40006, 233);
            list.put(42011, 155);
            list.put(42012, 155);
            list.put(42013, 233);
            list.put(42041, 155);
            list.put(42042, 155);
            list.put(42043, 155);
            list.put(42044, 155);
            list.put(42045, 233);
            list.put(42046, 233);
            list.put(42055, 233);
            list.put(42060, 78);
            list.put(42086, 155);
            list.put(42091, 155);
            list.put(42092, 155);
            list.put(42093, 155);
            list.put(42094, 155);
            list.put(42802, 78);
            list.put(42551, 233);
            list.put(42650, 233);
            list.put(42656, 233);
         } else if (num == 3) {
            list.put(30001, 53305);
            list.put(30002, 53305);
            list.put(30003, 53305);
            list.put(30004, 53305);
            list.put(30005, 53305);
            list.put(30006, 53305);
            list.put(32011, 35537);
            list.put(32012, 35537);
            list.put(32014, 53305);
            list.put(32041, 35537);
            list.put(32042, 35537);
            list.put(32043, 35537);
            list.put(32044, 35537);
            list.put(32045, 53305);
            list.put(32046, 53305);
            list.put(32055, 35537);
            list.put(32086, 35537);
            list.put(32091, 35537);
            list.put(32092, 35537);
            list.put(32093, 35537);
            list.put(32094, 35537);
            list.put(32111, 17768);
            list.put(32551, 53305);
            list.put(40001, 233);
            list.put(40002, 233);
            list.put(40003, 233);
            list.put(40004, 233);
            list.put(40005, 233);
            list.put(40006, 233);
            list.put(42011, 155);
            list.put(42012, 155);
            list.put(42013, 233);
            list.put(42041, 155);
            list.put(42042, 155);
            list.put(42043, 155);
            list.put(42044, 155);
            list.put(42045, 233);
            list.put(42046, 233);
            list.put(42055, 233);
            list.put(42060, 78);
            list.put(42086, 155);
            list.put(42091, 155);
            list.put(42092, 155);
            list.put(42093, 155);
            list.put(42094, 155);
            list.put(42802, 78);
            list.put(42551, 233);
            list.put(42650, 233);
            list.put(42656, 233);
         }
         break;
      case 1305:
         if (num == 1) {
            list.put(42045, 76923);
            list.put(42046, 76923);
            list.put(42051, 51282);
            list.put(42053, 51282);
            list.put(42057, 51282);
            list.put(42063, 76923);
            list.put(42064, 76923);
            list.put(42065, 76923);
            list.put(42066, 76923);
            list.put(42070, 25641);
            list.put(42087, 51282);
            list.put(42091, 51282);
            list.put(42092, 51282);
            list.put(42093, 51282);
            list.put(42094, 51282);
            list.put(42095, 25641);
            list.put(42096, 25641);
            list.put(42801, 25641);
            list.put(42292, 25641);
         } else if (num == 2) {
            list.put(32045, 71073);
            list.put(32046, 71073);
            list.put(32051, 47382);
            list.put(32053, 47382);
            list.put(32057, 47382);
            list.put(32059, 71073);
            list.put(32060, 71073);
            list.put(32061, 71073);
            list.put(32062, 71073);
            list.put(32070, 23691);
            list.put(32087, 47382);
            list.put(32091, 47382);
            list.put(32092, 47382);
            list.put(32093, 47382);
            list.put(32094, 47382);
            list.put(32201, 71073);
            list.put(32206, 71073);
            list.put(32291, 23691);
            list.put(42045, 383);
            list.put(42046, 383);
            list.put(42051, 255);
            list.put(42053, 255);
            list.put(42057, 255);
            list.put(42063, 383);
            list.put(42064, 383);
            list.put(42065, 383);
            list.put(42066, 383);
            list.put(42070, 128);
            list.put(42087, 255);
            list.put(42091, 255);
            list.put(42092, 255);
            list.put(42093, 255);
            list.put(42094, 255);
            list.put(42095, 128);
            list.put(42096, 128);
            list.put(42801, 128);
            list.put(42292, 128);
         } else if (num == 3) {
            list.put(32045, 71073);
            list.put(32046, 71073);
            list.put(32051, 47382);
            list.put(32053, 47382);
            list.put(32057, 47382);
            list.put(32059, 71073);
            list.put(32060, 71073);
            list.put(32061, 71073);
            list.put(32062, 71073);
            list.put(32070, 23691);
            list.put(32087, 47382);
            list.put(32091, 47382);
            list.put(32092, 47382);
            list.put(32093, 47382);
            list.put(32094, 47382);
            list.put(32201, 71073);
            list.put(32206, 71073);
            list.put(32291, 23691);
            list.put(42045, 383);
            list.put(42046, 383);
            list.put(42051, 255);
            list.put(42053, 255);
            list.put(42057, 255);
            list.put(42063, 383);
            list.put(42064, 383);
            list.put(42065, 383);
            list.put(42066, 383);
            list.put(42070, 128);
            list.put(42087, 255);
            list.put(42091, 255);
            list.put(42092, 255);
            list.put(42093, 255);
            list.put(42094, 255);
            list.put(42095, 128);
            list.put(42096, 128);
            list.put(42801, 128);
            list.put(42292, 128);
         }
         break;
      case 1306:
         if (num == 1) {
            list.put(40001, 45455);
            list.put(40002, 45455);
            list.put(40003, 45455);
            list.put(40004, 45455);
            list.put(40005, 45455);
            list.put(40006, 45455);
            list.put(42011, 30303);
            list.put(42012, 30303);
            list.put(42013, 46875);
            list.put(42041, 30303);
            list.put(42042, 30303);
            list.put(42043, 30303);
            list.put(42044, 30303);
            list.put(42045, 45455);
            list.put(42046, 45455);
            list.put(42055, 45455);
            list.put(42060, 15152);
            list.put(42061, 15152);
            list.put(42086, 30303);
            list.put(42091, 30303);
            list.put(42092, 30303);
            list.put(42093, 30303);
            list.put(42094, 30303);
            list.put(42802, 15152);
            list.put(42551, 45455);
            list.put(42650, 45455);
            list.put(42656, 45455);
         } else if (num == 2) {
            list.put(30001, 53305);
            list.put(30002, 53305);
            list.put(30003, 53305);
            list.put(30004, 53305);
            list.put(30005, 53305);
            list.put(30006, 53305);
            list.put(32011, 35537);
            list.put(32012, 35537);
            list.put(32014, 53305);
            list.put(32041, 35537);
            list.put(32042, 35537);
            list.put(32043, 35537);
            list.put(32044, 35537);
            list.put(32045, 53305);
            list.put(32046, 53305);
            list.put(32055, 35537);
            list.put(32086, 35537);
            list.put(32091, 35537);
            list.put(32092, 35537);
            list.put(32093, 35537);
            list.put(32094, 35537);
            list.put(32111, 17768);
            list.put(32551, 53305);
            list.put(40001, 226);
            list.put(40002, 226);
            list.put(40003, 226);
            list.put(40004, 226);
            list.put(40005, 226);
            list.put(40006, 226);
            list.put(42011, 151);
            list.put(42012, 151);
            list.put(42013, 226);
            list.put(42041, 151);
            list.put(42042, 151);
            list.put(42043, 151);
            list.put(42044, 151);
            list.put(42045, 226);
            list.put(42046, 226);
            list.put(42055, 226);
            list.put(42060, 75);
            list.put(42061, 75);
            list.put(42086, 151);
            list.put(42091, 151);
            list.put(42092, 151);
            list.put(42093, 151);
            list.put(42094, 151);
            list.put(42802, 75);
            list.put(42551, 226);
            list.put(42650, 226);
            list.put(42656, 226);
         } else if (num == 3) {
            list.put(30001, 53305);
            list.put(30002, 53305);
            list.put(30003, 53305);
            list.put(30004, 53305);
            list.put(30005, 53305);
            list.put(30006, 53305);
            list.put(32011, 35537);
            list.put(32012, 35537);
            list.put(32014, 53305);
            list.put(32041, 35537);
            list.put(32042, 35537);
            list.put(32043, 35537);
            list.put(32044, 35537);
            list.put(32045, 53305);
            list.put(32046, 53305);
            list.put(32055, 35537);
            list.put(32086, 35537);
            list.put(32091, 35537);
            list.put(32092, 35537);
            list.put(32093, 35537);
            list.put(32094, 35537);
            list.put(32111, 17768);
            list.put(32551, 53305);
            list.put(40001, 226);
            list.put(40002, 226);
            list.put(40003, 226);
            list.put(40004, 226);
            list.put(40005, 226);
            list.put(40006, 226);
            list.put(42011, 151);
            list.put(42012, 151);
            list.put(42013, 226);
            list.put(42041, 151);
            list.put(42042, 151);
            list.put(42043, 151);
            list.put(42044, 151);
            list.put(42045, 226);
            list.put(42046, 226);
            list.put(42055, 226);
            list.put(42060, 75);
            list.put(42061, 75);
            list.put(42086, 151);
            list.put(42091, 151);
            list.put(42092, 151);
            list.put(42093, 151);
            list.put(42094, 151);
            list.put(42802, 75);
            list.put(42551, 226);
            list.put(42650, 226);
            list.put(42656, 226);
         }
         break;
      case 1307:
         if (num == 1) {
            list.put(42045, 71429);
            list.put(42046, 71429);
            list.put(42051, 47619);
            list.put(42053, 47619);
            list.put(42057, 47619);
            list.put(42060, 23810);
            list.put(42063, 71429);
            list.put(42064, 71429);
            list.put(42065, 71429);
            list.put(42066, 71429);
            list.put(42070, 23810);
            list.put(42087, 47619);
            list.put(42091, 47619);
            list.put(42092, 47619);
            list.put(42093, 47619);
            list.put(42094, 47619);
            list.put(42095, 23810);
            list.put(42096, 23810);
            list.put(42801, 23810);
            list.put(42292, 23810);
            list.put(42602, 23810);
         } else if (num == 2) {
            list.put(32045, 69420);
            list.put(32046, 69420);
            list.put(32051, 46280);
            list.put(32053, 46280);
            list.put(32057, 46280);
            list.put(32059, 69420);
            list.put(32060, 69420);
            list.put(32061, 69420);
            list.put(32062, 69420);
            list.put(32070, 23140);
            list.put(32087, 46280);
            list.put(32091, 46280);
            list.put(32092, 46280);
            list.put(32093, 46280);
            list.put(32094, 46280);
            list.put(20401, 69420);
            list.put(20402, 69420);
            list.put(32291, 23140);
            list.put(32601, 23140);
            list.put(42045, 355);
            list.put(42046, 355);
            list.put(42051, 237);
            list.put(42053, 237);
            list.put(42057, 237);
            list.put(42060, 118);
            list.put(42063, 355);
            list.put(42064, 355);
            list.put(42065, 355);
            list.put(42066, 355);
            list.put(42070, 118);
            list.put(42087, 237);
            list.put(42091, 237);
            list.put(42092, 237);
            list.put(42093, 237);
            list.put(42094, 237);
            list.put(42095, 118);
            list.put(42096, 118);
            list.put(42801, 118);
            list.put(42292, 118);
            list.put(42602, 118);
         } else if (num == 3) {
            list.put(32045, 69420);
            list.put(32046, 69420);
            list.put(32051, 46280);
            list.put(32053, 46280);
            list.put(32057, 46280);
            list.put(32059, 69420);
            list.put(32060, 69420);
            list.put(32061, 69420);
            list.put(32062, 69420);
            list.put(32070, 23140);
            list.put(32087, 46280);
            list.put(32091, 46280);
            list.put(32092, 46280);
            list.put(32093, 46280);
            list.put(32094, 46280);
            list.put(20401, 69420);
            list.put(20402, 69420);
            list.put(32291, 23140);
            list.put(32601, 23140);
            list.put(42045, 355);
            list.put(42046, 355);
            list.put(42051, 237);
            list.put(42053, 237);
            list.put(42057, 237);
            list.put(42060, 118);
            list.put(42063, 355);
            list.put(42064, 355);
            list.put(42065, 355);
            list.put(42066, 355);
            list.put(42070, 118);
            list.put(42087, 237);
            list.put(42091, 237);
            list.put(42092, 237);
            list.put(42093, 237);
            list.put(42094, 237);
            list.put(42095, 118);
            list.put(42096, 118);
            list.put(42801, 118);
            list.put(42292, 118);
            list.put(42602, 118);
         }
         break;
      case 1308:
         if (num == 1) {
            list.put(40001, 46154);
            list.put(40002, 48387);
            list.put(40003, 48387);
            list.put(40004, 48387);
            list.put(40005, 48387);
            list.put(40006, 48387);
            list.put(42011, 32258);
            list.put(42012, 32258);
            list.put(42013, 48387);
            list.put(42041, 32258);
            list.put(42042, 32258);
            list.put(42043, 32258);
            list.put(42044, 32258);
            list.put(42045, 45455);
            list.put(42046, 48387);
            list.put(42055, 48387);
            list.put(42086, 32258);
            list.put(42091, 32258);
            list.put(42092, 32258);
            list.put(42093, 32258);
            list.put(42094, 32258);
            list.put(42802, 16129);
            list.put(42501, 48387);
            list.put(42551, 48387);
            list.put(42650, 48387);
            list.put(42656, 48387);
         } else if (num == 2) {
            list.put(30001, 53305);
            list.put(30002, 53305);
            list.put(30003, 53305);
            list.put(30004, 53305);
            list.put(30005, 53305);
            list.put(30006, 53305);
            list.put(32011, 35537);
            list.put(32012, 35537);
            list.put(32014, 53305);
            list.put(32041, 35537);
            list.put(32042, 35537);
            list.put(32043, 35537);
            list.put(32044, 35537);
            list.put(32045, 53305);
            list.put(32046, 53305);
            list.put(32055, 35537);
            list.put(32086, 35537);
            list.put(32091, 35537);
            list.put(32092, 35537);
            list.put(32093, 35537);
            list.put(32094, 35537);
            list.put(32111, 17768);
            list.put(32551, 53305);
            list.put(40001, 241);
            list.put(40002, 241);
            list.put(40003, 241);
            list.put(40004, 241);
            list.put(40005, 241);
            list.put(40006, 241);
            list.put(42011, 160);
            list.put(42012, 160);
            list.put(42013, 241);
            list.put(42041, 160);
            list.put(42042, 160);
            list.put(42043, 160);
            list.put(42044, 160);
            list.put(42045, 241);
            list.put(42046, 241);
            list.put(42055, 241);
            list.put(42086, 160);
            list.put(42091, 160);
            list.put(42092, 160);
            list.put(42093, 160);
            list.put(42094, 160);
            list.put(42802, 80);
            list.put(42501, 241);
            list.put(42551, 241);
            list.put(42650, 241);
            list.put(42656, 241);
         } else if (num == 3) {
            list.put(30001, 53305);
            list.put(30002, 53305);
            list.put(30003, 53305);
            list.put(30004, 53305);
            list.put(30005, 53305);
            list.put(30006, 53305);
            list.put(32011, 35537);
            list.put(32012, 35537);
            list.put(32014, 53305);
            list.put(32041, 35537);
            list.put(32042, 35537);
            list.put(32043, 35537);
            list.put(32044, 35537);
            list.put(32045, 53305);
            list.put(32046, 53305);
            list.put(32055, 35537);
            list.put(32086, 35537);
            list.put(32091, 35537);
            list.put(32092, 35537);
            list.put(32093, 35537);
            list.put(32094, 35537);
            list.put(32111, 17768);
            list.put(32551, 53305);
            list.put(40001, 241);
            list.put(40002, 241);
            list.put(40003, 241);
            list.put(40004, 241);
            list.put(40005, 241);
            list.put(40006, 241);
            list.put(42011, 160);
            list.put(42012, 160);
            list.put(42013, 241);
            list.put(42041, 160);
            list.put(42042, 160);
            list.put(42043, 160);
            list.put(42044, 160);
            list.put(42045, 241);
            list.put(42046, 241);
            list.put(42055, 241);
            list.put(42086, 160);
            list.put(42091, 160);
            list.put(42092, 160);
            list.put(42093, 160);
            list.put(42094, 160);
            list.put(42802, 80);
            list.put(42501, 241);
            list.put(42551, 241);
            list.put(42650, 241);
            list.put(42656, 241);
         }
         break;
      case 1309:
         if (num == 1) {
            list.put(40001, 46154);
            list.put(40002, 46154);
            list.put(40003, 46154);
            list.put(40004, 46154);
            list.put(40005, 46154);
            list.put(40006, 46154);
            list.put(42011, 30769);
            list.put(42012, 30769);
            list.put(42013, 46154);
            list.put(42041, 30769);
            list.put(42042, 30769);
            list.put(42043, 30769);
            list.put(42044, 30769);
            list.put(42045, 45455);
            list.put(42046, 46154);
            list.put(42055, 46154);
            list.put(42086, 30769);
            list.put(42091, 30769);
            list.put(42092, 30769);
            list.put(42093, 30769);
            list.put(42094, 30769);
            list.put(42802, 15385);
            list.put(42501, 46154);
            list.put(42551, 46154);
            list.put(42650, 46154);
            list.put(42656, 46154);
         } else if (num == 2) {
            list.put(30001, 53305);
            list.put(30002, 53305);
            list.put(30003, 53305);
            list.put(30004, 53305);
            list.put(30005, 53305);
            list.put(30006, 53305);
            list.put(32011, 35537);
            list.put(32012, 35537);
            list.put(32014, 53305);
            list.put(32041, 35537);
            list.put(32042, 35537);
            list.put(32043, 35537);
            list.put(32044, 35537);
            list.put(32045, 53305);
            list.put(32046, 53305);
            list.put(32055, 35537);
            list.put(32086, 35537);
            list.put(32091, 35537);
            list.put(32092, 35537);
            list.put(32093, 35537);
            list.put(32094, 35537);
            list.put(32111, 17768);
            list.put(32551, 53305);
            list.put(40001, 230);
            list.put(40002, 230);
            list.put(40003, 230);
            list.put(40004, 230);
            list.put(40005, 230);
            list.put(40006, 230);
            list.put(42011, 153);
            list.put(42012, 153);
            list.put(42013, 230);
            list.put(42041, 153);
            list.put(42042, 153);
            list.put(42043, 153);
            list.put(42044, 153);
            list.put(42045, 230);
            list.put(42046, 230);
            list.put(42055, 230);
            list.put(42086, 153);
            list.put(42091, 153);
            list.put(42092, 153);
            list.put(42093, 153);
            list.put(42094, 153);
            list.put(42802, 77);
            list.put(42501, 230);
            list.put(42551, 230);
            list.put(42650, 230);
            list.put(42656, 230);
         } else if (num == 3) {
            list.put(30001, 53305);
            list.put(30002, 53305);
            list.put(30003, 53305);
            list.put(30004, 53305);
            list.put(30005, 53305);
            list.put(30006, 53305);
            list.put(32011, 35537);
            list.put(32012, 35537);
            list.put(32014, 53305);
            list.put(32041, 35537);
            list.put(32042, 35537);
            list.put(32043, 35537);
            list.put(32044, 35537);
            list.put(32045, 53305);
            list.put(32046, 53305);
            list.put(32055, 35537);
            list.put(32086, 35537);
            list.put(32091, 35537);
            list.put(32092, 35537);
            list.put(32093, 35537);
            list.put(32094, 35537);
            list.put(32111, 17768);
            list.put(32551, 53305);
            list.put(40001, 230);
            list.put(40002, 230);
            list.put(40003, 230);
            list.put(40004, 230);
            list.put(40005, 230);
            list.put(40006, 230);
            list.put(42011, 153);
            list.put(42012, 153);
            list.put(42013, 230);
            list.put(42041, 153);
            list.put(42042, 153);
            list.put(42043, 153);
            list.put(42044, 153);
            list.put(42045, 230);
            list.put(42046, 230);
            list.put(42055, 230);
            list.put(42086, 153);
            list.put(42091, 153);
            list.put(42092, 153);
            list.put(42093, 153);
            list.put(42094, 153);
            list.put(42802, 77);
            list.put(42501, 230);
            list.put(42551, 230);
            list.put(42650, 230);
            list.put(42656, 230);
         }
      }

      return list;
   }

   public static Map<Integer, Integer> getUnlimitedLegendaryOption(int type, int num) {
      Map<Integer, Integer> list = new HashMap();
      switch(type) {
      case 1300:
         if (num == 1) {
            list.put(42045, 133333);
            list.put(42051, 133333);
            list.put(42053, 133333);
            list.put(42070, 133333);
            list.put(42095, 133333);
            list.put(42096, 133333);
            list.put(42292, 100000);
            list.put(42602, 100000);
         } else if (num == 2) {
            list.put(42045, 133333);
            list.put(42051, 133333);
            list.put(42053, 133333);
            list.put(42070, 133333);
            list.put(42095, 133333);
            list.put(42096, 133333);
            list.put(42292, 100000);
            list.put(42602, 100000);
         } else if (num == 3) {
            list.put(42045, 133333);
            list.put(42051, 133333);
            list.put(42053, 133333);
            list.put(42070, 133333);
            list.put(42095, 133333);
            list.put(42096, 133333);
            list.put(42292, 100000);
            list.put(42602, 100000);
         }
         break;
      case 1301:
         if (num == 1) {
            list.put(42041, 87500);
            list.put(42042, 87500);
            list.put(42043, 87500);
            list.put(42044, 87500);
            list.put(42045, 65000);
            list.put(42060, 65000);
            list.put(42086, 65000);
            list.put(42091, 87500);
            list.put(42092, 87500);
            list.put(42093, 87500);
            list.put(42094, 87500);
            list.put(42556, 40000);
         } else if (num == 2) {
            list.put(42041, 87500);
            list.put(42042, 87500);
            list.put(42043, 87500);
            list.put(42044, 87500);
            list.put(42045, 65000);
            list.put(42060, 65000);
            list.put(42086, 65000);
            list.put(42091, 87500);
            list.put(42092, 87500);
            list.put(42093, 87500);
            list.put(42094, 87500);
            list.put(42556, 40000);
         } else if (num == 3) {
            list.put(42041, 87500);
            list.put(42042, 87500);
            list.put(42043, 87500);
            list.put(42044, 87500);
            list.put(42045, 65000);
            list.put(42060, 65000);
            list.put(42086, 65000);
            list.put(42091, 87500);
            list.put(42092, 87500);
            list.put(42093, 87500);
            list.put(42094, 87500);
            list.put(42556, 40000);
         }
         break;
      case 1302:
         if (num == 1) {
            list.put(42045, 120000);
            list.put(42051, 120000);
            list.put(42053, 120000);
            list.put(42057, 80000);
            list.put(42060, 80000);
            list.put(42070, 80000);
            list.put(42095, 120000);
            list.put(42096, 120000);
            list.put(42292, 80000);
            list.put(42602, 80000);
         } else if (num == 2) {
            list.put(42045, 120000);
            list.put(42051, 120000);
            list.put(42053, 120000);
            list.put(42057, 80000);
            list.put(42060, 80000);
            list.put(42070, 80000);
            list.put(42095, 120000);
            list.put(42096, 120000);
            list.put(42292, 80000);
            list.put(42602, 80000);
         } else if (num == 3) {
            list.put(42045, 120000);
            list.put(42051, 120000);
            list.put(42053, 120000);
            list.put(42057, 80000);
            list.put(42060, 80000);
            list.put(42070, 80000);
            list.put(42095, 120000);
            list.put(42096, 120000);
            list.put(42292, 80000);
            list.put(42602, 80000);
         }
         break;
      case 1303:
         if (num == 1) {
            list.put(42045, 120000);
            list.put(42051, 120000);
            list.put(42053, 120000);
            list.put(42057, 80000);
            list.put(42060, 80000);
            list.put(42070, 80000);
            list.put(42095, 120000);
            list.put(42096, 120000);
            list.put(42292, 80000);
            list.put(42602, 80000);
         } else if (num == 2) {
            list.put(42045, 120000);
            list.put(42051, 120000);
            list.put(42053, 120000);
            list.put(42057, 80000);
            list.put(42060, 80000);
            list.put(42070, 80000);
            list.put(42095, 120000);
            list.put(42096, 120000);
            list.put(42292, 80000);
            list.put(42602, 80000);
         } else if (num == 3) {
            list.put(42045, 120000);
            list.put(42051, 120000);
            list.put(42053, 120000);
            list.put(42057, 80000);
            list.put(42060, 80000);
            list.put(42070, 80000);
            list.put(42095, 120000);
            list.put(42096, 120000);
            list.put(42292, 80000);
            list.put(42602, 80000);
         }
         break;
      case 1304:
         if (num == 1) {
            list.put(42011, 56666);
            list.put(42012, 56666);
            list.put(42041, 88888);
            list.put(42042, 88888);
            list.put(42043, 88888);
            list.put(42044, 88888);
            list.put(42045, 88888);
            list.put(42060, 56666);
            list.put(42086, 30000);
            list.put(42091, 88888);
            list.put(42092, 88888);
            list.put(42093, 88888);
            list.put(42094, 88888);
         } else if (num == 2) {
            list.put(42011, 56666);
            list.put(42012, 56666);
            list.put(42041, 88888);
            list.put(42042, 88888);
            list.put(42043, 88888);
            list.put(42044, 88888);
            list.put(42045, 88888);
            list.put(42060, 56666);
            list.put(42086, 30000);
            list.put(42091, 88888);
            list.put(42092, 88888);
            list.put(42093, 88888);
            list.put(42094, 88888);
         } else if (num == 3) {
            list.put(42011, 56666);
            list.put(42012, 56666);
            list.put(42041, 88888);
            list.put(42042, 88888);
            list.put(42043, 88888);
            list.put(42044, 88888);
            list.put(42045, 88888);
            list.put(42060, 56666);
            list.put(42086, 30000);
            list.put(42091, 88888);
            list.put(42092, 88888);
            list.put(42093, 88888);
            list.put(42094, 88888);
         }
         break;
      case 1305:
         if (num == 1) {
            list.put(42046, 111111);
            list.put(42051, 111111);
            list.put(42053, 111111);
            list.put(42057, 111111);
            list.put(42070, 111111);
            list.put(42087, 111111);
            list.put(42095, 111111);
            list.put(42096, 111111);
            list.put(42292, 111111);
         } else if (num == 2) {
            list.put(42046, 111111);
            list.put(42051, 111111);
            list.put(42053, 111111);
            list.put(42057, 111111);
            list.put(42070, 111111);
            list.put(42087, 111111);
            list.put(42095, 111111);
            list.put(42096, 111111);
            list.put(42292, 111111);
         } else if (num == 3) {
            list.put(42046, 111111);
            list.put(42051, 111111);
            list.put(42053, 111111);
            list.put(42057, 111111);
            list.put(42070, 111111);
            list.put(42087, 111111);
            list.put(42095, 111111);
            list.put(42096, 111111);
            list.put(42292, 111111);
         }
         break;
      case 1306:
         if (num == 1) {
            list.put(42011, 125000);
            list.put(42012, 125000);
            list.put(42041, 60000);
            list.put(42042, 60000);
            list.put(42043, 60000);
            list.put(42044, 60000);
            list.put(42045, 60000);
            list.put(42060, 75000);
            list.put(42061, 75000);
            list.put(42086, 60000);
            list.put(42091, 60000);
            list.put(42092, 60000);
            list.put(42093, 60000);
            list.put(42094, 60000);
         } else if (num == 2) {
            list.put(42011, 125000);
            list.put(42012, 125000);
            list.put(42041, 60000);
            list.put(42042, 60000);
            list.put(42043, 60000);
            list.put(42044, 60000);
            list.put(42045, 60000);
            list.put(42060, 75000);
            list.put(42061, 75000);
            list.put(42086, 60000);
            list.put(42091, 60000);
            list.put(42092, 60000);
            list.put(42093, 60000);
            list.put(42094, 60000);
         } else if (num == 3) {
            list.put(42011, 125000);
            list.put(42012, 125000);
            list.put(42041, 60000);
            list.put(42042, 60000);
            list.put(42043, 60000);
            list.put(42044, 60000);
            list.put(42045, 60000);
            list.put(42060, 75000);
            list.put(42061, 75000);
            list.put(42086, 60000);
            list.put(42091, 60000);
            list.put(42092, 60000);
            list.put(42093, 60000);
            list.put(42094, 60000);
         }
         break;
      case 1307:
         if (num == 1) {
            list.put(42045, 120000);
            list.put(42051, 120000);
            list.put(42053, 120000);
            list.put(42057, 80000);
            list.put(42060, 80000);
            list.put(42070, 80000);
            list.put(42095, 120000);
            list.put(42096, 120000);
            list.put(42292, 80000);
            list.put(42602, 80000);
         } else if (num == 2) {
            list.put(42045, 120000);
            list.put(42051, 120000);
            list.put(42053, 120000);
            list.put(42057, 80000);
            list.put(42060, 80000);
            list.put(42070, 80000);
            list.put(42095, 120000);
            list.put(42096, 120000);
            list.put(42292, 80000);
            list.put(42602, 80000);
         } else if (num == 3) {
            list.put(42045, 120000);
            list.put(42051, 120000);
            list.put(42053, 120000);
            list.put(42057, 80000);
            list.put(42060, 80000);
            list.put(42070, 80000);
            list.put(42095, 120000);
            list.put(42096, 120000);
            list.put(42292, 80000);
            list.put(42602, 80000);
         }
         break;
      case 1308:
         if (num == 1) {
            list.put(42011, 75000);
            list.put(42012, 75000);
            list.put(42041, 85000);
            list.put(42042, 85000);
            list.put(42043, 85000);
            list.put(42044, 85000);
            list.put(42045, 85000);
            list.put(42086, 85000);
            list.put(42091, 85000);
            list.put(42092, 85000);
            list.put(42093, 85000);
            list.put(42094, 85000);
         } else if (num == 2) {
            list.put(42011, 75000);
            list.put(42012, 75000);
            list.put(42041, 85000);
            list.put(42042, 85000);
            list.put(42043, 85000);
            list.put(42044, 85000);
            list.put(42045, 85000);
            list.put(42086, 85000);
            list.put(42091, 85000);
            list.put(42092, 85000);
            list.put(42093, 85000);
            list.put(42094, 85000);
         } else if (num == 3) {
            list.put(42011, 75000);
            list.put(42012, 75000);
            list.put(42041, 85000);
            list.put(42042, 85000);
            list.put(42043, 85000);
            list.put(42044, 85000);
            list.put(42045, 85000);
            list.put(42086, 85000);
            list.put(42091, 85000);
            list.put(42092, 85000);
            list.put(42093, 85000);
            list.put(42094, 85000);
         }
         break;
      case 1309:
         if (num == 1) {
            list.put(42011, 62500);
            list.put(42012, 62500);
            list.put(42041, 75000);
            list.put(42042, 75000);
            list.put(42043, 75000);
            list.put(42044, 75000);
            list.put(42045, 62500);
            list.put(42086, 62500);
            list.put(42091, 75000);
            list.put(42092, 75000);
            list.put(42093, 75000);
            list.put(42094, 75000);
            list.put(42650, 75000);
            list.put(42656, 75000);
         } else if (num == 2) {
            list.put(42011, 62500);
            list.put(42012, 62500);
            list.put(42041, 75000);
            list.put(42042, 75000);
            list.put(42043, 75000);
            list.put(42044, 75000);
            list.put(42045, 62500);
            list.put(42086, 62500);
            list.put(42091, 75000);
            list.put(42092, 75000);
            list.put(42093, 75000);
            list.put(42094, 75000);
            list.put(42650, 75000);
            list.put(42656, 75000);
         } else if (num == 3) {
            list.put(42011, 62500);
            list.put(42012, 62500);
            list.put(42041, 75000);
            list.put(42042, 75000);
            list.put(42043, 75000);
            list.put(42044, 75000);
            list.put(42045, 62500);
            list.put(42086, 62500);
            list.put(42091, 75000);
            list.put(42092, 75000);
            list.put(42093, 75000);
            list.put(42094, 75000);
            list.put(42650, 75000);
            list.put(42656, 75000);
         }
      }

      return list;
   }

   public static int getWeightedRandom(Map<Integer, Integer> weights) {
      int potentialid = 0;
      double bestValue = Double.MAX_VALUE;
      Iterator var4 = weights.entrySet().iterator();

      while(var4.hasNext()) {
         Entry<Integer, Integer> element = (Entry)var4.next();
         double a = (double)(Integer)element.getValue();
         double r = a / 10000.0D;
         double value = -Math.log(Randomizer.nextDouble()) / r;
         if (value < bestValue) {
            bestValue = value;
            potentialid = (Integer)element.getKey();
         }
      }

      return potentialid;
   }
}
